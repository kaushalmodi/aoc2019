CC: day11.nim

[Suite] day11 part2 challenge

[0] 3 => Instruction INP (3)
-> 1
==> memory[1] -> memory[8] = 1

[2] 1005 => Instruction JNZ (5)
inp param 0 (pos) = 1 <<-- addr2=8 <- addr1=3
inp param 1 (imm) = 321 <<-- addr1=4

[321] 109 => Instruction URB (9)
inp param 0 (imm) = 643 <<-- addr1=322
  new relative base = 643

[323] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=324
  OUTPUT[0] .. memory[324] => 0

[325] 104 => Instruction OUT (4)
inp param 0 (imm) = 1 <<-- addr1=326
  OUTPUT[1] .. memory[326] => 1

[327] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=328
inp param 1 (imm) = 387353256856 <<-- addr1=329
==> memory[330] -> memory[643+1] = 387353256856

[331] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=332
inp param 1 (imm) = 338 <<-- addr1=333
==> memory[334] -> memory[643+0] = 338

[335] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=336
inp param 1 (imm) = 442 <<-- addr1=337

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 645

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 387353256856 <<-- addr2=644 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[645+1] = 387353256856

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[645+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[645+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[645+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 649

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=648 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 387353256856 <<-- addr2=646 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 387353256856 <<-- addr2=646 <- addr1=525
==> memory[526] -> memory[649+1] = 387353256856

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=647 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[649+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[649+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[649+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 654

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=651 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=650 <- addr1=572
==> memory[573] -> memory[654+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=651 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[654+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=652 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[654+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[654+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 659

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=656 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=655 <- addr1=572
==> memory[573] -> memory[659+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=656 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[659+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=657 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[659+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[659+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 664

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=661 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=660 <- addr1=572
==> memory[573] -> memory[664+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=661 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[664+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=662 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[664+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[664+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 669

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=666 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=665 <- addr1=572
==> memory[573] -> memory[669+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=666 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[669+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=667 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[669+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[669+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 674

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=671 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=670 <- addr1=572
==> memory[573] -> memory[674+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=671 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[674+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[674+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[674+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 679

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=676 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=675 <- addr1=572
==> memory[573] -> memory[679+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=676 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[679+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=677 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[679+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[679+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 684

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=681 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=680 <- addr1=572
==> memory[573] -> memory[684+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=681 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[684+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=682 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[684+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[684+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 689

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=686 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=685 <- addr1=572
==> memory[573] -> memory[689+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=686 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[689+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[689+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[689+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 694

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=691 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=690 <- addr1=572
==> memory[573] -> memory[694+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=691 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[694+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[694+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[694+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 699

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=696 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=695 <- addr1=572
==> memory[573] -> memory[699+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=696 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[699+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[699+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[699+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 704

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=701 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=700 <- addr1=572
==> memory[573] -> memory[704+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=701 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[704+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=702 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[704+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[704+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 709

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=706 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=705 <- addr1=572
==> memory[573] -> memory[709+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=706 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[709+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=707 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[709+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[709+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 714

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=711 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=710 <- addr1=572
==> memory[573] -> memory[714+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=711 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[714+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=712 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[714+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[714+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 719

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=716 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=715 <- addr1=572
==> memory[573] -> memory[719+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=716 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[719+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[719+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[719+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 724

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=721 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=720 <- addr1=572
==> memory[573] -> memory[724+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=721 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[724+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=722 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[724+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[724+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 729

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=726 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=725 <- addr1=572
==> memory[573] -> memory[729+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=726 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[729+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[729+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[729+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 734

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=731 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=730 <- addr1=572
==> memory[573] -> memory[734+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=731 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[734+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[734+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[734+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 739

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=736 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=735 <- addr1=572
==> memory[573] -> memory[739+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=736 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[739+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=737 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[739+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[739+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 744

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=741 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=740 <- addr1=572
==> memory[573] -> memory[744+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=741 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[744+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=742 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[744+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[744+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 749

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=746 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=745 <- addr1=572
==> memory[573] -> memory[749+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=746 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[749+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[749+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[749+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 754

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=751 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=750 <- addr1=572
==> memory[573] -> memory[754+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=751 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[754+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=752 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[754+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[754+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 759

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=756 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=755 <- addr1=572
==> memory[573] -> memory[759+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=756 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[759+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=757 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[759+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[759+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 764

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=761 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=760 <- addr1=572
==> memory[573] -> memory[764+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=761 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[764+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=762 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[764+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[764+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 769

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=766 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=765 <- addr1=572
==> memory[573] -> memory[769+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=766 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[769+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=767 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[769+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[769+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 774

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=771 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=770 <- addr1=572
==> memory[573] -> memory[774+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=771 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[774+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=772 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[774+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[774+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 779

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=776 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=775 <- addr1=572
==> memory[573] -> memory[779+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=776 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[779+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=777 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[779+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[779+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 784

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=781 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=780 <- addr1=572
==> memory[573] -> memory[784+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=781 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[784+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=782 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[784+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[784+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 789

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=786 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=785 <- addr1=572
==> memory[573] -> memory[789+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=786 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[789+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=787 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[789+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[789+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 794

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=791 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=790 <- addr1=572
==> memory[573] -> memory[794+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=791 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[794+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=792 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[794+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[794+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 799

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=796 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=795 <- addr1=572
==> memory[573] -> memory[799+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=796 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[799+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=797 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[799+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[799+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 804

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=801 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=800 <- addr1=572
==> memory[573] -> memory[804+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=801 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[804+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=802 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[804+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[804+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 809

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=806 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=805 <- addr1=572
==> memory[573] -> memory[809+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=806 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[809+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=807 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[809+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[809+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 814

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=811 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=810 <- addr1=572
==> memory[573] -> memory[814+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=811 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[814+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=812 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[814+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[814+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 819

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=816 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=815 <- addr1=572
==> memory[573] -> memory[819+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=816 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[819+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[819+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[819+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 824

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=821 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=820 <- addr1=572
==> memory[573] -> memory[824+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=821 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[824+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=822 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[824+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[824+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 829

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=826 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=825 <- addr1=572
==> memory[573] -> memory[829+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=826 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[829+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[829+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[829+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 834

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=831 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=830 <- addr1=572
==> memory[573] -> memory[834+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=831 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[834+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[834+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[834+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 839

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=836 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=835 <- addr1=572
==> memory[573] -> memory[839+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=836 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[839+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=837 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[839+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[839+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 844

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=841 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=840 <- addr1=572
==> memory[573] -> memory[844+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=841 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[844+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[844+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[844+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 849

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=846 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 387353256856 <<-- addr2=845 <- addr1=572
==> memory[573] -> memory[849+1] = 387353256856

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=846 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[849+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=847 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[849+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[849+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 854

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=851 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 387353256856 <<-- addr2=850 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=852 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 387353256856 <<-- addr2=850 <- addr1=565
==> memory[566] -> memory[854+-4] = 387353256856

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 849

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=849 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 387353256856 <<-- addr2=850 <- addr1=591
==> memory[592] -> memory[849+-4] = 387353256856

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[849+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 387353256856 <<-- addr2=845 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=847 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[849+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=847 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=848 <- addr1=610
==> memory[611] -> memory[849+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=846 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=848 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[849+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[849+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 851
Input queue empty, returning ..
<   0> Painted (x: 0, y: 0) black, turned to right, and then moved to (x: 1, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=850 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[851+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 849

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=849 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=847 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[849+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 387353256856 <<-- addr2=845 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=847 <- addr1=636
==> memory[637] -> memory[849+-4] = 387353256856

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 844

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=844 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 387353256856 <<-- addr2=845 <- addr1=591
==> memory[592] -> memory[844+-4] = 387353256856

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[844+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 387353256856 <<-- addr2=840 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=842 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=843 <- addr1=610
==> memory[611] -> memory[844+-2] = 274877906944

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=841 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=843 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[844+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[844+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 846
Input queue empty, returning ..
<   1> Painted (x: 1, y: 0) black, turned to  down, and then moved to (x: 1, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=845 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[846+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 844

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=844 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[844+-2] = -274877906944

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 387353256856 <<-- addr2=840 <- addr1=635
inp param 1 (rel) = -274877906944 <<-- addr2=842 <- addr1=636
==> memory[637] -> memory[844+-4] = 112475349912

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 839

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=839 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 112475349912 <<-- addr2=840 <- addr1=591
==> memory[592] -> memory[839+-4] = 112475349912

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[839+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 112475349912 <<-- addr2=835 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=837 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[839+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=837 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=838 <- addr1=610
==> memory[611] -> memory[839+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=836 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=838 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[839+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[839+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 841
Input queue empty, returning ..
<   2> Painted (x: 1, y: -1) white, turned to right, and then moved to (x: 2, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=840 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[841+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 839

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=839 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=837 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[839+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 112475349912 <<-- addr2=835 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=837 <- addr1=636
==> memory[637] -> memory[839+-4] = 112475349912

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 834

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=834 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 112475349912 <<-- addr2=835 <- addr1=591
==> memory[592] -> memory[834+-4] = 112475349912

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[834+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 112475349912 <<-- addr2=830 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=832 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=833 <- addr1=610
==> memory[611] -> memory[834+-2] = 68719476736

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=831 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=833 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[834+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[834+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 836
Input queue empty, returning ..
<   3> Painted (x: 2, y: -1) black, turned to    up, and then moved to (x: 2, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=835 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[836+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 834

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=834 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[834+-2] = -68719476736

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 112475349912 <<-- addr2=830 <- addr1=635
inp param 1 (rel) = -68719476736 <<-- addr2=832 <- addr1=636
==> memory[637] -> memory[834+-4] = 43755873176

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 829

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=829 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 43755873176 <<-- addr2=830 <- addr1=591
==> memory[592] -> memory[829+-4] = 43755873176

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[829+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 43755873176 <<-- addr2=825 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=827 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=828 <- addr1=610
==> memory[611] -> memory[829+-2] = 34359738368

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=826 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=828 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[829+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[829+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 831
Input queue empty, returning ..
<   4> Painted (x: 2, y: 0) white, turned to right, and then moved to (x: 3, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=830 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[831+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 829

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=829 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[829+-2] = -34359738368

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 43755873176 <<-- addr2=825 <- addr1=635
inp param 1 (rel) = -34359738368 <<-- addr2=827 <- addr1=636
==> memory[637] -> memory[829+-4] = 9396134808

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 824

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=824 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9396134808 <<-- addr2=825 <- addr1=591
==> memory[592] -> memory[824+-4] = 9396134808

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[824+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9396134808 <<-- addr2=820 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=822 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[824+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=822 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=823 <- addr1=610
==> memory[611] -> memory[824+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=821 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=823 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[824+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[824+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 826
Input queue empty, returning ..
<   5> Painted (x: 3, y: 0) white, turned to  down, and then moved to (x: 3, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=825 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[826+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 824

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=824 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=822 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[824+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9396134808 <<-- addr2=820 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=822 <- addr1=636
==> memory[637] -> memory[824+-4] = 9396134808

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 819

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=819 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9396134808 <<-- addr2=820 <- addr1=591
==> memory[592] -> memory[819+-4] = 9396134808

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[819+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9396134808 <<-- addr2=815 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=817 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=818 <- addr1=610
==> memory[611] -> memory[819+-2] = 8589934592

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=816 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=818 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[819+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[819+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 821
Input queue empty, returning ..
<   6> Painted (x: 3, y: -1) black, turned to right, and then moved to (x: 4, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=820 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[821+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 819

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=819 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[819+-2] = -8589934592

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9396134808 <<-- addr2=815 <- addr1=635
inp param 1 (rel) = -8589934592 <<-- addr2=817 <- addr1=636
==> memory[637] -> memory[819+-4] = 806200216

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 814

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=814 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 806200216 <<-- addr2=815 <- addr1=591
==> memory[592] -> memory[814+-4] = 806200216

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[814+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 806200216 <<-- addr2=810 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=812 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[814+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=812 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=813 <- addr1=610
==> memory[611] -> memory[814+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=811 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=813 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[814+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[814+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 816
Input queue empty, returning ..
<   7> Painted (x: 4, y: -1) white, turned to    up, and then moved to (x: 4, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=815 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[816+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 814

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=814 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=812 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[814+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 806200216 <<-- addr2=810 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=812 <- addr1=636
==> memory[637] -> memory[814+-4] = 806200216

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 809

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=809 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 806200216 <<-- addr2=810 <- addr1=591
==> memory[592] -> memory[809+-4] = 806200216

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[809+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 806200216 <<-- addr2=805 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=807 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[809+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=807 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=808 <- addr1=610
==> memory[611] -> memory[809+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=806 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=808 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[809+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[809+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 811
Input queue empty, returning ..
<   8> Painted (x: 4, y: 0) black, turned to right, and then moved to (x: 5, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=810 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[811+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 809

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=809 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=807 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[809+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 806200216 <<-- addr2=805 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=807 <- addr1=636
==> memory[637] -> memory[809+-4] = 806200216

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 804

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=804 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 806200216 <<-- addr2=805 <- addr1=591
==> memory[592] -> memory[804+-4] = 806200216

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[804+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 806200216 <<-- addr2=800 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=802 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[804+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=802 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=803 <- addr1=610
==> memory[611] -> memory[804+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=801 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=803 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[804+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[804+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 806
Input queue empty, returning ..
<   9> Painted (x: 5, y: 0) black, turned to  down, and then moved to (x: 5, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=805 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[806+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 804

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=804 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=802 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[804+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 806200216 <<-- addr2=800 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=802 <- addr1=636
==> memory[637] -> memory[804+-4] = 806200216

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 799

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=799 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 806200216 <<-- addr2=800 <- addr1=591
==> memory[592] -> memory[799+-4] = 806200216

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[799+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 806200216 <<-- addr2=795 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=797 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=797 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=798 <- addr1=610
==> memory[611] -> memory[799+-2] = 536870912

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=796 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=798 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[799+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[799+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 801
Input queue empty, returning ..
<  10> Painted (x: 5, y: -1) black, turned to right, and then moved to (x: 6, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=800 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[801+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 799

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=799 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=797 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[799+-2] = -536870912

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 806200216 <<-- addr2=795 <- addr1=635
inp param 1 (rel) = -536870912 <<-- addr2=797 <- addr1=636
==> memory[637] -> memory[799+-4] = 269329304

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 794

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=794 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 269329304 <<-- addr2=795 <- addr1=591
==> memory[592] -> memory[794+-4] = 269329304

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[794+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 269329304 <<-- addr2=790 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=792 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=792 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=793 <- addr1=610
==> memory[611] -> memory[794+-2] = 268435456

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=791 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=793 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[794+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[794+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 796
Input queue empty, returning ..
<  11> Painted (x: 6, y: -1) white, turned to    up, and then moved to (x: 6, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=795 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[796+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 794

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=794 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=792 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[794+-2] = -268435456

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 269329304 <<-- addr2=790 <- addr1=635
inp param 1 (rel) = -268435456 <<-- addr2=792 <- addr1=636
==> memory[637] -> memory[794+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 789

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=789 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=790 <- addr1=591
==> memory[592] -> memory[789+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[789+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=785 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=787 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[789+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=787 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=788 <- addr1=610
==> memory[611] -> memory[789+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=786 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=788 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[789+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[789+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 791
Input queue empty, returning ..
<  12> Painted (x: 6, y: 0) white, turned to right, and then moved to (x: 7, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=790 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[791+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 789

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=789 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=787 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[789+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=785 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=787 <- addr1=636
==> memory[637] -> memory[789+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 784

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=784 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=785 <- addr1=591
==> memory[592] -> memory[784+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[784+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=780 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=782 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[784+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=782 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=783 <- addr1=610
==> memory[611] -> memory[784+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=781 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=783 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[784+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[784+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 786
Input queue empty, returning ..
<  13> Painted (x: 7, y: 0) black, turned to  down, and then moved to (x: 7, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=785 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[786+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 784

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=784 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=782 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[784+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=780 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=782 <- addr1=636
==> memory[637] -> memory[784+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 779

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=779 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=780 <- addr1=591
==> memory[592] -> memory[779+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[779+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=775 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=777 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[779+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=777 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=778 <- addr1=610
==> memory[611] -> memory[779+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=776 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=778 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[779+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[779+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 781
Input queue empty, returning ..
<  14> Painted (x: 7, y: -1) black, turned to right, and then moved to (x: 8, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=780 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[781+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 779

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=779 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=777 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[779+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=775 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=777 <- addr1=636
==> memory[637] -> memory[779+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 774

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=774 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=775 <- addr1=591
==> memory[592] -> memory[774+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[774+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=770 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=772 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[774+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=772 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=773 <- addr1=610
==> memory[611] -> memory[774+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=771 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=773 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[774+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[774+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 776
Input queue empty, returning ..
<  15> Painted (x: 8, y: -1) black, turned to    up, and then moved to (x: 8, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=775 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[776+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 774

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=774 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=772 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[774+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=770 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=772 <- addr1=636
==> memory[637] -> memory[774+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 769

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=769 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=770 <- addr1=591
==> memory[592] -> memory[769+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[769+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=765 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=767 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[769+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=767 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=768 <- addr1=610
==> memory[611] -> memory[769+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=766 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=768 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[769+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[769+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 771
Input queue empty, returning ..
<  16> Painted (x: 8, y: 0) black, turned to right, and then moved to (x: 9, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=770 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[771+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 769

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=769 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=767 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[769+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=765 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=767 <- addr1=636
==> memory[637] -> memory[769+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 764

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=764 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=765 <- addr1=591
==> memory[592] -> memory[764+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[764+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=760 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=762 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[764+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=762 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=763 <- addr1=610
==> memory[611] -> memory[764+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=761 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=763 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[764+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[764+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 766
Input queue empty, returning ..
<  17> Painted (x: 9, y: 0) black, turned to  down, and then moved to (x: 9, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=765 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[766+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 764

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=764 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=762 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[764+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=760 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=762 <- addr1=636
==> memory[637] -> memory[764+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 759

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=759 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=760 <- addr1=591
==> memory[592] -> memory[759+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[759+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=755 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=757 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[759+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=757 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=758 <- addr1=610
==> memory[611] -> memory[759+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=756 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=758 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[759+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[759+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 761
Input queue empty, returning ..
<  18> Painted (x: 9, y: -1) black, turned to right, and then moved to (x: 10, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=760 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[761+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 759

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=759 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=757 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[759+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=755 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=757 <- addr1=636
==> memory[637] -> memory[759+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 754

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=754 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=755 <- addr1=591
==> memory[592] -> memory[754+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[754+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=750 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=752 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[754+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=752 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=753 <- addr1=610
==> memory[611] -> memory[754+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=751 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=753 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[754+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[754+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 756
Input queue empty, returning ..
<  19> Painted (x: 10, y: -1) black, turned to    up, and then moved to (x: 10, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=755 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[756+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 754

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=754 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=752 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[754+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=750 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=752 <- addr1=636
==> memory[637] -> memory[754+-4] = 893848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 749

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=749 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 893848 <<-- addr2=750 <- addr1=591
==> memory[592] -> memory[749+-4] = 893848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[749+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 893848 <<-- addr2=745 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=747 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=748 <- addr1=610
==> memory[611] -> memory[749+-2] = 524288

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=746 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=748 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[749+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[749+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 751
Input queue empty, returning ..
<  20> Painted (x: 10, y: 0) black, turned to right, and then moved to (x: 11, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=750 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[751+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 749

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=749 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[749+-2] = -524288

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 893848 <<-- addr2=745 <- addr1=635
inp param 1 (rel) = -524288 <<-- addr2=747 <- addr1=636
==> memory[637] -> memory[749+-4] = 369560

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 744

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=744 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 369560 <<-- addr2=745 <- addr1=591
==> memory[592] -> memory[744+-4] = 369560

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[744+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 369560 <<-- addr2=740 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=742 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=742 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=743 <- addr1=610
==> memory[611] -> memory[744+-2] = 262144

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=741 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=743 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[744+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[744+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 746
Input queue empty, returning ..
<  21> Painted (x: 11, y: 0) white, turned to  down, and then moved to (x: 11, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=745 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[746+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 744

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=744 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=742 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[744+-2] = -262144

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 369560 <<-- addr2=740 <- addr1=635
inp param 1 (rel) = -262144 <<-- addr2=742 <- addr1=636
==> memory[637] -> memory[744+-4] = 107416

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 739

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=739 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 107416 <<-- addr2=740 <- addr1=591
==> memory[592] -> memory[739+-4] = 107416

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[739+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 107416 <<-- addr2=735 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=737 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[739+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=737 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=738 <- addr1=610
==> memory[611] -> memory[739+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=736 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=738 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[739+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[739+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 741
Input queue empty, returning ..
<  22> Painted (x: 11, y: -1) white, turned to right, and then moved to (x: 12, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=740 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[741+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 739

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=739 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=737 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[739+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 107416 <<-- addr2=735 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=737 <- addr1=636
==> memory[637] -> memory[739+-4] = 107416

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 734

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=734 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 107416 <<-- addr2=735 <- addr1=591
==> memory[592] -> memory[734+-4] = 107416

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[734+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 107416 <<-- addr2=730 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=732 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=733 <- addr1=610
==> memory[611] -> memory[734+-2] = 65536

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=731 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=733 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[734+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[734+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 736
Input queue empty, returning ..
<  23> Painted (x: 12, y: -1) black, turned to    up, and then moved to (x: 12, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=735 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[736+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 734

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=734 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[734+-2] = -65536

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 107416 <<-- addr2=730 <- addr1=635
inp param 1 (rel) = -65536 <<-- addr2=732 <- addr1=636
==> memory[637] -> memory[734+-4] = 41880

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 729

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=729 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 41880 <<-- addr2=730 <- addr1=591
==> memory[592] -> memory[729+-4] = 41880

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[729+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 41880 <<-- addr2=725 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=727 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=728 <- addr1=610
==> memory[611] -> memory[729+-2] = 32768

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=726 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=728 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[729+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[729+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 731
Input queue empty, returning ..
<  24> Painted (x: 12, y: 0) white, turned to right, and then moved to (x: 13, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=730 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[731+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 729

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=729 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[729+-2] = -32768

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 41880 <<-- addr2=725 <- addr1=635
inp param 1 (rel) = -32768 <<-- addr2=727 <- addr1=636
==> memory[637] -> memory[729+-4] = 9112

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 724

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=724 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9112 <<-- addr2=725 <- addr1=591
==> memory[592] -> memory[724+-4] = 9112

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[724+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9112 <<-- addr2=720 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=722 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[724+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=722 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=723 <- addr1=610
==> memory[611] -> memory[724+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=721 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=723 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[724+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[724+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 726
Input queue empty, returning ..
<  25> Painted (x: 13, y: 0) white, turned to  down, and then moved to (x: 13, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=725 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[726+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 724

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=724 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=722 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[724+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9112 <<-- addr2=720 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=722 <- addr1=636
==> memory[637] -> memory[724+-4] = 9112

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 719

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=719 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9112 <<-- addr2=720 <- addr1=591
==> memory[592] -> memory[719+-4] = 9112

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[719+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9112 <<-- addr2=715 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=717 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=718 <- addr1=610
==> memory[611] -> memory[719+-2] = 8192

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=716 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=718 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[719+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[719+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 721
Input queue empty, returning ..
<  26> Painted (x: 13, y: -1) black, turned to right, and then moved to (x: 14, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=720 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[721+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 719

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=719 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[719+-2] = -8192

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9112 <<-- addr2=715 <- addr1=635
inp param 1 (rel) = -8192 <<-- addr2=717 <- addr1=636
==> memory[637] -> memory[719+-4] = 920

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 714

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=714 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 920 <<-- addr2=715 <- addr1=591
==> memory[592] -> memory[714+-4] = 920

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[714+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 920 <<-- addr2=710 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=712 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[714+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=712 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=713 <- addr1=610
==> memory[611] -> memory[714+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=711 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=713 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[714+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[714+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 716
Input queue empty, returning ..
<  27> Painted (x: 14, y: -1) white, turned to    up, and then moved to (x: 14, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=715 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[716+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 714

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=714 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=712 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[714+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 920 <<-- addr2=710 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=712 <- addr1=636
==> memory[637] -> memory[714+-4] = 920

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 709

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=709 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 920 <<-- addr2=710 <- addr1=591
==> memory[592] -> memory[709+-4] = 920

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[709+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 920 <<-- addr2=705 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=707 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[709+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=707 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=708 <- addr1=610
==> memory[611] -> memory[709+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=706 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=708 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[709+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[709+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 711
Input queue empty, returning ..
<  28> Painted (x: 14, y: 0) black, turned to right, and then moved to (x: 15, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=710 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[711+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 709

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=709 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=707 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[709+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 920 <<-- addr2=705 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=707 <- addr1=636
==> memory[637] -> memory[709+-4] = 920

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 704

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=704 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 920 <<-- addr2=705 <- addr1=591
==> memory[592] -> memory[704+-4] = 920

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[704+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 920 <<-- addr2=700 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=702 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[704+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=702 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=703 <- addr1=610
==> memory[611] -> memory[704+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=701 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=703 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[704+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[704+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 706
Input queue empty, returning ..
<  29> Painted (x: 15, y: 0) black, turned to  down, and then moved to (x: 15, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=705 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[706+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 704

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=704 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=702 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[704+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 920 <<-- addr2=700 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=702 <- addr1=636
==> memory[637] -> memory[704+-4] = 920

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 699

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=699 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 920 <<-- addr2=700 <- addr1=591
==> memory[592] -> memory[699+-4] = 920

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[699+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 920 <<-- addr2=695 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=697 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=698 <- addr1=610
==> memory[611] -> memory[699+-2] = 512

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=696 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=698 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[699+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[699+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 701
Input queue empty, returning ..
<  30> Painted (x: 15, y: -1) black, turned to right, and then moved to (x: 16, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=700 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[701+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 699

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=699 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[699+-2] = -512

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 920 <<-- addr2=695 <- addr1=635
inp param 1 (rel) = -512 <<-- addr2=697 <- addr1=636
==> memory[637] -> memory[699+-4] = 408

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 694

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=694 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 408 <<-- addr2=695 <- addr1=591
==> memory[592] -> memory[694+-4] = 408

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[694+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 408 <<-- addr2=690 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=692 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=693 <- addr1=610
==> memory[611] -> memory[694+-2] = 256

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=691 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=693 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[694+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[694+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 696
Input queue empty, returning ..
<  31> Painted (x: 16, y: -1) white, turned to    up, and then moved to (x: 16, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=695 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[696+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 694

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=694 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[694+-2] = -256

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 408 <<-- addr2=690 <- addr1=635
inp param 1 (rel) = -256 <<-- addr2=692 <- addr1=636
==> memory[637] -> memory[694+-4] = 152

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 689

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=689 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 152 <<-- addr2=690 <- addr1=591
==> memory[592] -> memory[689+-4] = 152

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[689+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 152 <<-- addr2=685 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=687 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=688 <- addr1=610
==> memory[611] -> memory[689+-2] = 128

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=686 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=688 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[689+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[689+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 691
Input queue empty, returning ..
<  32> Painted (x: 16, y: 0) white, turned to right, and then moved to (x: 17, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=690 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[691+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 689

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=689 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[689+-2] = -128

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 152 <<-- addr2=685 <- addr1=635
inp param 1 (rel) = -128 <<-- addr2=687 <- addr1=636
==> memory[637] -> memory[689+-4] = 24

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 684

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=684 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 24 <<-- addr2=685 <- addr1=591
==> memory[592] -> memory[684+-4] = 24

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[684+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=680 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=682 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[684+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=682 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=683 <- addr1=610
==> memory[611] -> memory[684+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=681 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=683 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[684+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[684+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 686
Input queue empty, returning ..
<  33> Painted (x: 17, y: 0) white, turned to  down, and then moved to (x: 17, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=685 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[686+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 684

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=684 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=682 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[684+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=680 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=682 <- addr1=636
==> memory[637] -> memory[684+-4] = 24

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 679

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=679 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 24 <<-- addr2=680 <- addr1=591
==> memory[592] -> memory[679+-4] = 24

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[679+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=675 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=677 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[679+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=677 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=678 <- addr1=610
==> memory[611] -> memory[679+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=676 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=678 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[679+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[679+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 681
Input queue empty, returning ..
<  34> Painted (x: 17, y: -1) black, turned to right, and then moved to (x: 18, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=680 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[681+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 679

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=679 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=677 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[679+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=675 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=677 <- addr1=636
==> memory[637] -> memory[679+-4] = 24

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 674

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=674 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 24 <<-- addr2=675 <- addr1=591
==> memory[592] -> memory[674+-4] = 24

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[674+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=670 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=672 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=673 <- addr1=610
==> memory[611] -> memory[674+-2] = 16

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=671 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=673 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[674+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[674+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 676
Input queue empty, returning ..
<  35> Painted (x: 18, y: -1) black, turned to    up, and then moved to (x: 18, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=675 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[676+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 674

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=674 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[674+-2] = -16

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=670 <- addr1=635
inp param 1 (rel) = -16 <<-- addr2=672 <- addr1=636
==> memory[637] -> memory[674+-4] = 8

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 669

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=669 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8 <<-- addr2=670 <- addr1=591
==> memory[592] -> memory[669+-4] = 8

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[669+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=665 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=667 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=667 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=668 <- addr1=610
==> memory[611] -> memory[669+-2] = 8

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=666 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=668 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[669+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[669+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 671
Input queue empty, returning ..
<  36> Painted (x: 18, y: 0) white, turned to right, and then moved to (x: 19, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=670 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[671+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 669

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=669 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=667 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[669+-2] = -8

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=665 <- addr1=635
inp param 1 (rel) = -8 <<-- addr2=667 <- addr1=636
==> memory[637] -> memory[669+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 664

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=664 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=665 <- addr1=591
==> memory[592] -> memory[664+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[664+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=660 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=662 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[664+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=662 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=663 <- addr1=610
==> memory[611] -> memory[664+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=661 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=663 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[664+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[664+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 666
Input queue empty, returning ..
<  37> Painted (x: 19, y: 0) white, turned to  down, and then moved to (x: 19, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=665 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[666+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 664

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=664 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=662 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[664+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=660 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=662 <- addr1=636
==> memory[637] -> memory[664+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 659

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=659 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=660 <- addr1=591
==> memory[592] -> memory[659+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[659+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=657 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[659+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=657 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=658 <- addr1=610
==> memory[611] -> memory[659+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=656 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=658 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[659+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[659+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 661
Input queue empty, returning ..
<  38> Painted (x: 19, y: -1) black, turned to right, and then moved to (x: 20, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=660 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[661+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 659

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=659 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=657 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[659+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=657 <- addr1=636
==> memory[637] -> memory[659+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 654

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=654 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=655 <- addr1=591
==> memory[592] -> memory[654+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[654+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=650 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=652 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[654+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=652 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=653 <- addr1=610
==> memory[611] -> memory[654+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=651 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=653 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[654+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[654+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 656
Input queue empty, returning ..
<  39> Painted (x: 20, y: -1) black, turned to    up, and then moved to (x: 20, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[656+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 654

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=654 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=652 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[654+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=650 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=652 <- addr1=636
==> memory[637] -> memory[654+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 649

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=649 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 645

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=645 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 643

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 338 <<-- addr2=643 <- addr1=467

[338] 21101 => Instruction ADD (1)
inp param 0 (imm) = 936332866452 <<-- addr1=339
inp param 1 (imm) = 0 <<-- addr1=340
==> memory[341] -> memory[643+1] = 936332866452

[342] 21101 => Instruction ADD (1)
inp param 0 (imm) = 349 <<-- addr1=343
inp param 1 (imm) = 0 <<-- addr1=344
==> memory[345] -> memory[643+0] = 349

[346] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=347
inp param 1 (imm) = 442 <<-- addr1=348

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 645

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 936332866452 <<-- addr2=644 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[645+1] = 936332866452

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[645+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[645+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[645+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 649

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=648 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 936332866452 <<-- addr2=646 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 936332866452 <<-- addr2=646 <- addr1=525
==> memory[526] -> memory[649+1] = 936332866452

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=647 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[649+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[649+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[649+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 654

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=651 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=650 <- addr1=572
==> memory[573] -> memory[654+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=651 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[654+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=652 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[654+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[654+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 659

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=656 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=655 <- addr1=572
==> memory[573] -> memory[659+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=656 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[659+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=657 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[659+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[659+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 664

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=661 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=660 <- addr1=572
==> memory[573] -> memory[664+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=661 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[664+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=662 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[664+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[664+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 669

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=666 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=665 <- addr1=572
==> memory[573] -> memory[669+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=666 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[669+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=667 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[669+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[669+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 674

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=671 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=670 <- addr1=572
==> memory[573] -> memory[674+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=671 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[674+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[674+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[674+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 679

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=676 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=675 <- addr1=572
==> memory[573] -> memory[679+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=676 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[679+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=677 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[679+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[679+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 684

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=681 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=680 <- addr1=572
==> memory[573] -> memory[684+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=681 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[684+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=682 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[684+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[684+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 689

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=686 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=685 <- addr1=572
==> memory[573] -> memory[689+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=686 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[689+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[689+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[689+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 694

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=691 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=690 <- addr1=572
==> memory[573] -> memory[694+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=691 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[694+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[694+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[694+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 699

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=696 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=695 <- addr1=572
==> memory[573] -> memory[699+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=696 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[699+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[699+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[699+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 704

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=701 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=700 <- addr1=572
==> memory[573] -> memory[704+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=701 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[704+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=702 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[704+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[704+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 709

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=706 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=705 <- addr1=572
==> memory[573] -> memory[709+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=706 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[709+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=707 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[709+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[709+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 714

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=711 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=710 <- addr1=572
==> memory[573] -> memory[714+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=711 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[714+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=712 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[714+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[714+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 719

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=716 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=715 <- addr1=572
==> memory[573] -> memory[719+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=716 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[719+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[719+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[719+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 724

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=721 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=720 <- addr1=572
==> memory[573] -> memory[724+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=721 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[724+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=722 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[724+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[724+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 729

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=726 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=725 <- addr1=572
==> memory[573] -> memory[729+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=726 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[729+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[729+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[729+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 734

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=731 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=730 <- addr1=572
==> memory[573] -> memory[734+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=731 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[734+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[734+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[734+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 739

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=736 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=735 <- addr1=572
==> memory[573] -> memory[739+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=736 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[739+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=737 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[739+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[739+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 744

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=741 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=740 <- addr1=572
==> memory[573] -> memory[744+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=741 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[744+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=742 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[744+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[744+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 749

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=746 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=745 <- addr1=572
==> memory[573] -> memory[749+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=746 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[749+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[749+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[749+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 754

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=751 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=750 <- addr1=572
==> memory[573] -> memory[754+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=751 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[754+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=752 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[754+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[754+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 759

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=756 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=755 <- addr1=572
==> memory[573] -> memory[759+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=756 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[759+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=757 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[759+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[759+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 764

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=761 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=760 <- addr1=572
==> memory[573] -> memory[764+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=761 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[764+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=762 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[764+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[764+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 769

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=766 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=765 <- addr1=572
==> memory[573] -> memory[769+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=766 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[769+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=767 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[769+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[769+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 774

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=771 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=770 <- addr1=572
==> memory[573] -> memory[774+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=771 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[774+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=772 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[774+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[774+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 779

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=776 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=775 <- addr1=572
==> memory[573] -> memory[779+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=776 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[779+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=777 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[779+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[779+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 784

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=781 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=780 <- addr1=572
==> memory[573] -> memory[784+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=781 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[784+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=782 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[784+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[784+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 789

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=786 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=785 <- addr1=572
==> memory[573] -> memory[789+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=786 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[789+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=787 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[789+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[789+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 794

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=791 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=790 <- addr1=572
==> memory[573] -> memory[794+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=791 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[794+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=792 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[794+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[794+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 799

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=796 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=795 <- addr1=572
==> memory[573] -> memory[799+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=796 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[799+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=797 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[799+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[799+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 804

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=801 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=800 <- addr1=572
==> memory[573] -> memory[804+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=801 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[804+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=802 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[804+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[804+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 809

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=806 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=805 <- addr1=572
==> memory[573] -> memory[809+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=806 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[809+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=807 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[809+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[809+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 814

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=811 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=810 <- addr1=572
==> memory[573] -> memory[814+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=811 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[814+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=812 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[814+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[814+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 819

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=816 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=815 <- addr1=572
==> memory[573] -> memory[819+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=816 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[819+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[819+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[819+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 824

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=821 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=820 <- addr1=572
==> memory[573] -> memory[824+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=821 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[824+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=822 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[824+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[824+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 829

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=826 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=825 <- addr1=572
==> memory[573] -> memory[829+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=826 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[829+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[829+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[829+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 834

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=831 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=830 <- addr1=572
==> memory[573] -> memory[834+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=831 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[834+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[834+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[834+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 839

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=836 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=835 <- addr1=572
==> memory[573] -> memory[839+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=836 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[839+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=837 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[839+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[839+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 844

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=841 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=840 <- addr1=572
==> memory[573] -> memory[844+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=841 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[844+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[844+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[844+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 849

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=846 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 936332866452 <<-- addr2=845 <- addr1=572
==> memory[573] -> memory[849+1] = 936332866452

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=846 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[849+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=847 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[849+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[849+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 854

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=851 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 936332866452 <<-- addr2=850 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=852 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 936332866452 <<-- addr2=850 <- addr1=565
==> memory[566] -> memory[854+-4] = 936332866452

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 849

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=849 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 936332866452 <<-- addr2=850 <- addr1=591
==> memory[592] -> memory[849+-4] = 936332866452

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[849+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 936332866452 <<-- addr2=845 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=847 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=847 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=848 <- addr1=610
==> memory[611] -> memory[849+-2] = 549755813888

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=846 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=848 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[849+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[849+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 851
Input queue empty, returning ..
<  40> Painted (x: 20, y: 0) black, turned to right, and then moved to (x: 21, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=850 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[851+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 849

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=849 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=847 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[849+-2] = -549755813888

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 936332866452 <<-- addr2=845 <- addr1=635
inp param 1 (rel) = -549755813888 <<-- addr2=847 <- addr1=636
==> memory[637] -> memory[849+-4] = 386577052564

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 844

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=844 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 386577052564 <<-- addr2=845 <- addr1=591
==> memory[592] -> memory[844+-4] = 386577052564

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[844+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 386577052564 <<-- addr2=840 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=842 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=843 <- addr1=610
==> memory[611] -> memory[844+-2] = 274877906944

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=841 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=843 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[844+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[844+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 846
Input queue empty, returning ..
<  41> Painted (x: 21, y: 0) white, turned to  down, and then moved to (x: 21, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=845 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[846+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 844

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=844 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=842 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[844+-2] = -274877906944

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 386577052564 <<-- addr2=840 <- addr1=635
inp param 1 (rel) = -274877906944 <<-- addr2=842 <- addr1=636
==> memory[637] -> memory[844+-4] = 111699145620

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 839

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=839 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 111699145620 <<-- addr2=840 <- addr1=591
==> memory[592] -> memory[839+-4] = 111699145620

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[839+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 111699145620 <<-- addr2=835 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=837 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[839+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=837 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=838 <- addr1=610
==> memory[611] -> memory[839+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=836 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=838 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[839+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[839+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 841
Input queue empty, returning ..
<  42> Painted (x: 21, y: -1) white, turned to right, and then moved to (x: 22, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=840 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[841+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 839

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=839 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=837 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[839+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 111699145620 <<-- addr2=835 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=837 <- addr1=636
==> memory[637] -> memory[839+-4] = 111699145620

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 834

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=834 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 111699145620 <<-- addr2=835 <- addr1=591
==> memory[592] -> memory[834+-4] = 111699145620

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[834+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 111699145620 <<-- addr2=830 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=832 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=833 <- addr1=610
==> memory[611] -> memory[834+-2] = 68719476736

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=831 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=833 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[834+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[834+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 836
Input queue empty, returning ..
<  43> Painted (x: 22, y: -1) black, turned to    up, and then moved to (x: 22, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=835 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[836+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 834

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=834 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=832 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[834+-2] = -68719476736

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 111699145620 <<-- addr2=830 <- addr1=635
inp param 1 (rel) = -68719476736 <<-- addr2=832 <- addr1=636
==> memory[637] -> memory[834+-4] = 42979668884

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 829

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=829 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42979668884 <<-- addr2=830 <- addr1=591
==> memory[592] -> memory[829+-4] = 42979668884

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[829+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42979668884 <<-- addr2=825 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=827 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=828 <- addr1=610
==> memory[611] -> memory[829+-2] = 34359738368

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=826 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=828 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[829+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[829+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 831
Input queue empty, returning ..
<  44> Painted (x: 22, y: 0) white, turned to right, and then moved to (x: 23, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=830 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[831+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 829

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=829 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=827 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[829+-2] = -34359738368

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42979668884 <<-- addr2=825 <- addr1=635
inp param 1 (rel) = -34359738368 <<-- addr2=827 <- addr1=636
==> memory[637] -> memory[829+-4] = 8619930516

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 824

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=824 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8619930516 <<-- addr2=825 <- addr1=591
==> memory[592] -> memory[824+-4] = 8619930516

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[824+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8619930516 <<-- addr2=820 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=822 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[824+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=822 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=823 <- addr1=610
==> memory[611] -> memory[824+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=821 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=823 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[824+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[824+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 826
Input queue empty, returning ..
<  45> Painted (x: 23, y: 0) white, turned to  down, and then moved to (x: 23, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=825 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[826+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 824

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=824 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=822 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[824+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8619930516 <<-- addr2=820 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=822 <- addr1=636
==> memory[637] -> memory[824+-4] = 8619930516

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 819

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=819 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8619930516 <<-- addr2=820 <- addr1=591
==> memory[592] -> memory[819+-4] = 8619930516

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[819+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8619930516 <<-- addr2=815 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=817 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=818 <- addr1=610
==> memory[611] -> memory[819+-2] = 8589934592

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=816 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=818 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[819+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[819+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 821
Input queue empty, returning ..
<  46> Painted (x: 23, y: -1) black, turned to right, and then moved to (x: 24, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=820 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[821+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 819

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=819 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=817 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[819+-2] = -8589934592

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8619930516 <<-- addr2=815 <- addr1=635
inp param 1 (rel) = -8589934592 <<-- addr2=817 <- addr1=636
==> memory[637] -> memory[819+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 814

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=814 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=815 <- addr1=591
==> memory[592] -> memory[814+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[814+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=810 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=812 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[814+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=812 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=813 <- addr1=610
==> memory[611] -> memory[814+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=811 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=813 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[814+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[814+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 816
Input queue empty, returning ..
<  47> Painted (x: 24, y: -1) white, turned to    up, and then moved to (x: 24, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=815 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[816+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 814

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=814 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=812 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[814+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=810 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=812 <- addr1=636
==> memory[637] -> memory[814+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 809

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=809 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=810 <- addr1=591
==> memory[592] -> memory[809+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[809+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=805 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=807 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[809+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=807 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=808 <- addr1=610
==> memory[611] -> memory[809+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=806 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=808 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[809+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[809+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 811
Input queue empty, returning ..
<  48> Painted (x: 24, y: 0) black, turned to right, and then moved to (x: 25, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=810 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[811+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 809

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=809 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=807 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[809+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=805 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=807 <- addr1=636
==> memory[637] -> memory[809+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 804

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=804 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=805 <- addr1=591
==> memory[592] -> memory[804+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[804+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=800 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=802 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[804+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=802 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=803 <- addr1=610
==> memory[611] -> memory[804+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=801 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=803 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[804+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[804+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 806
Input queue empty, returning ..
<  49> Painted (x: 25, y: 0) black, turned to  down, and then moved to (x: 25, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=805 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[806+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 804

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=804 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=802 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[804+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=800 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=802 <- addr1=636
==> memory[637] -> memory[804+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 799

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=799 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=800 <- addr1=591
==> memory[592] -> memory[799+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[799+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=795 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=797 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[799+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=797 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=798 <- addr1=610
==> memory[611] -> memory[799+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=796 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=798 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[799+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[799+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 801
Input queue empty, returning ..
<  50> Painted (x: 25, y: -1) black, turned to right, and then moved to (x: 26, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=800 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[801+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 799

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=799 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=797 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[799+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=795 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=797 <- addr1=636
==> memory[637] -> memory[799+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 794

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=794 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=795 <- addr1=591
==> memory[592] -> memory[794+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[794+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=790 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=792 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[794+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=792 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=793 <- addr1=610
==> memory[611] -> memory[794+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=791 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=793 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[794+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[794+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 796
Input queue empty, returning ..
<  51> Painted (x: 26, y: -1) black, turned to    up, and then moved to (x: 26, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=795 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[796+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 794

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=794 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=792 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[794+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=790 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=792 <- addr1=636
==> memory[637] -> memory[794+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 789

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=789 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=790 <- addr1=591
==> memory[592] -> memory[789+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[789+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=785 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=787 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[789+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=787 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=788 <- addr1=610
==> memory[611] -> memory[789+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=786 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=788 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[789+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[789+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 791
Input queue empty, returning ..
<  52> Painted (x: 26, y: 0) black, turned to right, and then moved to (x: 27, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=790 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[791+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 789

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=789 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=787 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[789+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=785 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=787 <- addr1=636
==> memory[637] -> memory[789+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 784

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=784 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=785 <- addr1=591
==> memory[592] -> memory[784+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[784+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=780 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=782 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[784+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=782 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=783 <- addr1=610
==> memory[611] -> memory[784+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=781 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=783 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[784+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[784+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 786
Input queue empty, returning ..
<  53> Painted (x: 27, y: 0) black, turned to  down, and then moved to (x: 27, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=785 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[786+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 784

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=784 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=782 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[784+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=780 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=782 <- addr1=636
==> memory[637] -> memory[784+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 779

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=779 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=780 <- addr1=591
==> memory[592] -> memory[779+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[779+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=775 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=777 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[779+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=777 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=778 <- addr1=610
==> memory[611] -> memory[779+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=776 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=778 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[779+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[779+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 781
Input queue empty, returning ..
<  54> Painted (x: 27, y: -1) black, turned to right, and then moved to (x: 28, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=780 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[781+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 779

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=779 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=777 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[779+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=775 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=777 <- addr1=636
==> memory[637] -> memory[779+-4] = 29995924

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 774

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=774 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29995924 <<-- addr2=775 <- addr1=591
==> memory[592] -> memory[774+-4] = 29995924

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[774+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29995924 <<-- addr2=770 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=772 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=772 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=773 <- addr1=610
==> memory[611] -> memory[774+-2] = 16777216

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=771 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=773 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[774+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[774+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 776
Input queue empty, returning ..
<  55> Painted (x: 28, y: -1) black, turned to    up, and then moved to (x: 28, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=775 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[776+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 774

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=774 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=772 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[774+-2] = -16777216

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29995924 <<-- addr2=770 <- addr1=635
inp param 1 (rel) = -16777216 <<-- addr2=772 <- addr1=636
==> memory[637] -> memory[774+-4] = 13218708

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 769

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=769 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 13218708 <<-- addr2=770 <- addr1=591
==> memory[592] -> memory[769+-4] = 13218708

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[769+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 13218708 <<-- addr2=765 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=767 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=767 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=768 <- addr1=610
==> memory[611] -> memory[769+-2] = 8388608

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=766 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=768 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[769+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[769+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 771
Input queue empty, returning ..
<  56> Painted (x: 28, y: 0) white, turned to right, and then moved to (x: 29, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=770 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[771+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 769

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=769 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=767 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[769+-2] = -8388608

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 13218708 <<-- addr2=765 <- addr1=635
inp param 1 (rel) = -8388608 <<-- addr2=767 <- addr1=636
==> memory[637] -> memory[769+-4] = 4830100

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 764

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=764 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4830100 <<-- addr2=765 <- addr1=591
==> memory[592] -> memory[764+-4] = 4830100

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[764+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4830100 <<-- addr2=760 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=762 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=762 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=763 <- addr1=610
==> memory[611] -> memory[764+-2] = 4194304

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=761 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=763 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[764+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[764+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 766
Input queue empty, returning ..
<  57> Painted (x: 29, y: 0) white, turned to  down, and then moved to (x: 29, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=765 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[766+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 764

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=764 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=762 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[764+-2] = -4194304

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4830100 <<-- addr2=760 <- addr1=635
inp param 1 (rel) = -4194304 <<-- addr2=762 <- addr1=636
==> memory[637] -> memory[764+-4] = 635796

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 759

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=759 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 635796 <<-- addr2=760 <- addr1=591
==> memory[592] -> memory[759+-4] = 635796

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[759+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 635796 <<-- addr2=755 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=757 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[759+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=757 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=758 <- addr1=610
==> memory[611] -> memory[759+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=756 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=758 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[759+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[759+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 761
Input queue empty, returning ..
<  58> Painted (x: 29, y: -1) white, turned to right, and then moved to (x: 30, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=760 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[761+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 759

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=759 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=757 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[759+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 635796 <<-- addr2=755 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=757 <- addr1=636
==> memory[637] -> memory[759+-4] = 635796

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 754

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=754 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 635796 <<-- addr2=755 <- addr1=591
==> memory[592] -> memory[754+-4] = 635796

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[754+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 635796 <<-- addr2=750 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=752 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[754+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=752 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=753 <- addr1=610
==> memory[611] -> memory[754+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=751 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=753 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[754+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[754+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 756
Input queue empty, returning ..
<  59> Painted (x: 30, y: -1) black, turned to    up, and then moved to (x: 30, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=755 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[756+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 754

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=754 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=752 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[754+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 635796 <<-- addr2=750 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=752 <- addr1=636
==> memory[637] -> memory[754+-4] = 635796

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 749

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=749 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 635796 <<-- addr2=750 <- addr1=591
==> memory[592] -> memory[749+-4] = 635796

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[749+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 635796 <<-- addr2=745 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=747 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=748 <- addr1=610
==> memory[611] -> memory[749+-2] = 524288

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=746 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=748 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[749+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[749+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 751
Input queue empty, returning ..
<  60> Painted (x: 30, y: 0) black, turned to right, and then moved to (x: 31, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=750 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[751+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 749

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=749 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=747 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[749+-2] = -524288

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 635796 <<-- addr2=745 <- addr1=635
inp param 1 (rel) = -524288 <<-- addr2=747 <- addr1=636
==> memory[637] -> memory[749+-4] = 111508

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 744

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=744 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 111508 <<-- addr2=745 <- addr1=591
==> memory[592] -> memory[744+-4] = 111508

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[744+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 111508 <<-- addr2=740 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=742 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[744+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=742 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=743 <- addr1=610
==> memory[611] -> memory[744+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=741 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=743 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[744+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[744+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 746
Input queue empty, returning ..
<  61> Painted (x: 31, y: 0) white, turned to  down, and then moved to (x: 31, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=745 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[746+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 744

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=744 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=742 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[744+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 111508 <<-- addr2=740 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=742 <- addr1=636
==> memory[637] -> memory[744+-4] = 111508

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 739

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=739 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 111508 <<-- addr2=740 <- addr1=591
==> memory[592] -> memory[739+-4] = 111508

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[739+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 111508 <<-- addr2=735 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=737 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[739+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=737 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=738 <- addr1=610
==> memory[611] -> memory[739+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=736 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=738 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[739+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[739+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 741
Input queue empty, returning ..
<  62> Painted (x: 31, y: -1) black, turned to right, and then moved to (x: 32, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=740 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[741+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 739

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=739 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=737 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[739+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 111508 <<-- addr2=735 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=737 <- addr1=636
==> memory[637] -> memory[739+-4] = 111508

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 734

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=734 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 111508 <<-- addr2=735 <- addr1=591
==> memory[592] -> memory[734+-4] = 111508

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[734+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 111508 <<-- addr2=730 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=732 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=733 <- addr1=610
==> memory[611] -> memory[734+-2] = 65536

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=731 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=733 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[734+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[734+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 736
Input queue empty, returning ..
<  63> Painted (x: 32, y: -1) black, turned to    up, and then moved to (x: 32, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=735 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[736+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 734

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=734 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=732 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[734+-2] = -65536

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 111508 <<-- addr2=730 <- addr1=635
inp param 1 (rel) = -65536 <<-- addr2=732 <- addr1=636
==> memory[637] -> memory[734+-4] = 45972

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 729

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=729 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 45972 <<-- addr2=730 <- addr1=591
==> memory[592] -> memory[729+-4] = 45972

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[729+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 45972 <<-- addr2=725 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=727 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=728 <- addr1=610
==> memory[611] -> memory[729+-2] = 32768

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=726 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=728 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[729+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[729+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 731
Input queue empty, returning ..
<  64> Painted (x: 32, y: 0) white, turned to right, and then moved to (x: 33, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=730 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[731+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 729

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=729 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=727 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[729+-2] = -32768

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 45972 <<-- addr2=725 <- addr1=635
inp param 1 (rel) = -32768 <<-- addr2=727 <- addr1=636
==> memory[637] -> memory[729+-4] = 13204

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 724

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=724 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 13204 <<-- addr2=725 <- addr1=591
==> memory[592] -> memory[724+-4] = 13204

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[724+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 13204 <<-- addr2=720 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=722 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[724+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=722 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=723 <- addr1=610
==> memory[611] -> memory[724+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=721 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=723 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[724+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[724+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 726
Input queue empty, returning ..
<  65> Painted (x: 33, y: 0) white, turned to  down, and then moved to (x: 33, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=725 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[726+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 724

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=724 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=722 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[724+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 13204 <<-- addr2=720 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=722 <- addr1=636
==> memory[637] -> memory[724+-4] = 13204

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 719

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=719 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 13204 <<-- addr2=720 <- addr1=591
==> memory[592] -> memory[719+-4] = 13204

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[719+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 13204 <<-- addr2=715 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=717 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=718 <- addr1=610
==> memory[611] -> memory[719+-2] = 8192

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=716 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=718 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[719+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[719+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 721
Input queue empty, returning ..
<  66> Painted (x: 33, y: -1) black, turned to right, and then moved to (x: 34, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=720 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[721+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 719

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=719 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=717 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[719+-2] = -8192

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 13204 <<-- addr2=715 <- addr1=635
inp param 1 (rel) = -8192 <<-- addr2=717 <- addr1=636
==> memory[637] -> memory[719+-4] = 5012

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 714

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=714 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 5012 <<-- addr2=715 <- addr1=591
==> memory[592] -> memory[714+-4] = 5012

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[714+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 5012 <<-- addr2=710 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=712 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=712 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=713 <- addr1=610
==> memory[611] -> memory[714+-2] = 4096

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=711 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=713 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[714+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[714+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 716
Input queue empty, returning ..
<  67> Painted (x: 34, y: -1) white, turned to    up, and then moved to (x: 34, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=715 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[716+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 714

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=714 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=712 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[714+-2] = -4096

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 5012 <<-- addr2=710 <- addr1=635
inp param 1 (rel) = -4096 <<-- addr2=712 <- addr1=636
==> memory[637] -> memory[714+-4] = 916

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 709

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=709 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 916 <<-- addr2=710 <- addr1=591
==> memory[592] -> memory[709+-4] = 916

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[709+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 916 <<-- addr2=705 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=707 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[709+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=707 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=708 <- addr1=610
==> memory[611] -> memory[709+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=706 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=708 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[709+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[709+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 711
Input queue empty, returning ..
<  68> Painted (x: 34, y: 0) white, turned to right, and then moved to (x: 35, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=710 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[711+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 709

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=709 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=707 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[709+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 916 <<-- addr2=705 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=707 <- addr1=636
==> memory[637] -> memory[709+-4] = 916

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 704

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=704 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 916 <<-- addr2=705 <- addr1=591
==> memory[592] -> memory[704+-4] = 916

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[704+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 916 <<-- addr2=700 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=702 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[704+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=702 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=703 <- addr1=610
==> memory[611] -> memory[704+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=701 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=703 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[704+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[704+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 706
Input queue empty, returning ..
<  69> Painted (x: 35, y: 0) black, turned to  down, and then moved to (x: 35, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=705 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[706+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 704

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=704 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=702 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[704+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 916 <<-- addr2=700 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=702 <- addr1=636
==> memory[637] -> memory[704+-4] = 916

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 699

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=699 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 916 <<-- addr2=700 <- addr1=591
==> memory[592] -> memory[699+-4] = 916

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[699+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 916 <<-- addr2=695 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=697 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=698 <- addr1=610
==> memory[611] -> memory[699+-2] = 512

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=696 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=698 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[699+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[699+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 701
Input queue empty, returning ..
<  70> Painted (x: 35, y: -1) black, turned to right, and then moved to (x: 36, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=700 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[701+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 699

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=699 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=697 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[699+-2] = -512

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 916 <<-- addr2=695 <- addr1=635
inp param 1 (rel) = -512 <<-- addr2=697 <- addr1=636
==> memory[637] -> memory[699+-4] = 404

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 694

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=694 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 404 <<-- addr2=695 <- addr1=591
==> memory[592] -> memory[694+-4] = 404

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[694+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 404 <<-- addr2=690 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=692 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=693 <- addr1=610
==> memory[611] -> memory[694+-2] = 256

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=691 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=693 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[694+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[694+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 696
Input queue empty, returning ..
<  71> Painted (x: 36, y: -1) white, turned to    up, and then moved to (x: 36, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=695 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[696+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 694

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=694 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=692 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[694+-2] = -256

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 404 <<-- addr2=690 <- addr1=635
inp param 1 (rel) = -256 <<-- addr2=692 <- addr1=636
==> memory[637] -> memory[694+-4] = 148

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 689

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=689 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 148 <<-- addr2=690 <- addr1=591
==> memory[592] -> memory[689+-4] = 148

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[689+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 148 <<-- addr2=685 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=687 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=688 <- addr1=610
==> memory[611] -> memory[689+-2] = 128

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=686 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=688 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[689+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[689+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 691
Input queue empty, returning ..
<  72> Painted (x: 36, y: 0) white, turned to right, and then moved to (x: 37, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=690 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[691+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 689

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=689 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=687 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[689+-2] = -128

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 148 <<-- addr2=685 <- addr1=635
inp param 1 (rel) = -128 <<-- addr2=687 <- addr1=636
==> memory[637] -> memory[689+-4] = 20

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 684

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=684 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 20 <<-- addr2=685 <- addr1=591
==> memory[592] -> memory[684+-4] = 20

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[684+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=680 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=682 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[684+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=682 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=683 <- addr1=610
==> memory[611] -> memory[684+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=681 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=683 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[684+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[684+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 686
Input queue empty, returning ..
<  73> Painted (x: 37, y: 0) white, turned to  down, and then moved to (x: 37, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=685 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[686+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 684

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=684 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=682 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[684+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=680 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=682 <- addr1=636
==> memory[637] -> memory[684+-4] = 20

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 679

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=679 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 20 <<-- addr2=680 <- addr1=591
==> memory[592] -> memory[679+-4] = 20

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[679+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=675 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=677 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[679+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=677 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=678 <- addr1=610
==> memory[611] -> memory[679+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=676 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=678 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[679+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[679+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 681
Input queue empty, returning ..
<  74> Painted (x: 37, y: -1) black, turned to right, and then moved to (x: 38, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=680 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[681+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 679

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=679 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=677 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[679+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=675 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=677 <- addr1=636
==> memory[637] -> memory[679+-4] = 20

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 674

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=674 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 20 <<-- addr2=675 <- addr1=591
==> memory[592] -> memory[674+-4] = 20

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[674+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=670 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=672 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=673 <- addr1=610
==> memory[611] -> memory[674+-2] = 16

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=671 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=673 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[674+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[674+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 676
Input queue empty, returning ..
<  75> Painted (x: 38, y: -1) black, turned to    up, and then moved to (x: 38, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=675 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[676+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 674

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=674 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=672 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[674+-2] = -16

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=670 <- addr1=635
inp param 1 (rel) = -16 <<-- addr2=672 <- addr1=636
==> memory[637] -> memory[674+-4] = 4

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 669

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=669 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4 <<-- addr2=670 <- addr1=591
==> memory[592] -> memory[669+-4] = 4

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[669+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=665 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=667 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[669+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=667 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=668 <- addr1=610
==> memory[611] -> memory[669+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=666 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=668 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[669+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[669+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 671
Input queue empty, returning ..
<  76> Painted (x: 38, y: 0) white, turned to right, and then moved to (x: 39, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=670 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[671+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 669

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=669 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=667 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[669+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=665 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=667 <- addr1=636
==> memory[637] -> memory[669+-4] = 4

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 664

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=664 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4 <<-- addr2=665 <- addr1=591
==> memory[592] -> memory[664+-4] = 4

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[664+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=660 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=662 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=662 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=663 <- addr1=610
==> memory[611] -> memory[664+-2] = 4

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=661 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=663 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[664+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[664+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 666
Input queue empty, returning ..
<  77> Painted (x: 39, y: 0) black, turned to  down, and then moved to (x: 39, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=665 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[666+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 664

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=664 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=662 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[664+-2] = -4

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=660 <- addr1=635
inp param 1 (rel) = -4 <<-- addr2=662 <- addr1=636
==> memory[637] -> memory[664+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 659

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=659 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=660 <- addr1=591
==> memory[592] -> memory[659+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[659+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=657 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[659+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=657 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=658 <- addr1=610
==> memory[611] -> memory[659+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=656 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=658 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[659+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[659+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 661
Input queue empty, returning ..
<  78> Painted (x: 39, y: -1) white, turned to right, and then moved to (x: 40, y: -1)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=660 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[661+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 659

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=659 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=657 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[659+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=657 <- addr1=636
==> memory[637] -> memory[659+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 654

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=654 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=655 <- addr1=591
==> memory[592] -> memory[654+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[654+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=650 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=652 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[654+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=652 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=653 <- addr1=610
==> memory[611] -> memory[654+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=651 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=653 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[654+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[654+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 656
Input queue empty, returning ..
<  79> Painted (x: 40, y: -1) black, turned to    up, and then moved to (x: 40, y: 0)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=655 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[656+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 654

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=654 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=652 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[654+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=650 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=652 <- addr1=636
==> memory[637] -> memory[654+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 649

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=649 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 645

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=645 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 643

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 349 <<-- addr2=643 <- addr1=467
Input queue empty, returning ..
<  80> Painted (x: 40, y: 0) black, turned to right, and then moved to (x: 41, y: 0)

[349] 3 => Instruction INP (3)
-> 0
==> memory[350] -> memory[10] = 0

[351] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=352
  OUTPUT[0] .. memory[352] => 0

[353] 104 => Instruction OUT (4)
inp param 0 (imm) = 1 <<-- addr1=354
  OUTPUT[1] .. memory[354] => 1
Input queue empty, returning ..
<  81> Painted (x: 41, y: 0) black, turned to  down, and then moved to (x: 41, y: -1)

[355] 3 => Instruction INP (3)
-> 0
==> memory[356] -> memory[10] = 0

[357] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=358
  OUTPUT[0] .. memory[358] => 0

[359] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=360
  OUTPUT[1] .. memory[360] => 0
Input queue empty, returning ..
<  82> Painted (x: 41, y: -1) black, turned to right, and then moved to (x: 42, y: -1)

[361] 3 => Instruction INP (3)
-> 0
==> memory[362] -> memory[10] = 0

[363] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=364
  OUTPUT[0] .. memory[364] => 0

[365] 104 => Instruction OUT (4)
inp param 0 (imm) = 1 <<-- addr1=366
  OUTPUT[1] .. memory[366] => 1
Input queue empty, returning ..
<  83> Painted (x: 42, y: -1) black, turned to  down, and then moved to (x: 42, y: -2)

[367] 3 => Instruction INP (3)
-> 0
==> memory[368] -> memory[10] = 0

[369] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=370
  OUTPUT[0] .. memory[370] => 0

[371] 104 => Instruction OUT (4)
inp param 0 (imm) = 1 <<-- addr1=372
  OUTPUT[1] .. memory[372] => 1
Input queue empty, returning ..
<  84> Painted (x: 42, y: -2) black, turned to  left, and then moved to (x: 41, y: -2)

[373] 3 => Instruction INP (3)
-> 0
==> memory[374] -> memory[10] = 0

[375] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=376
  OUTPUT[0] .. memory[376] => 0

[377] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=378
  OUTPUT[1] .. memory[378] => 0
Input queue empty, returning ..
<  85> Painted (x: 41, y: -2) black, turned to  down, and then moved to (x: 41, y: -3)

[379] 3 => Instruction INP (3)
-> 0
==> memory[380] -> memory[10] = 0

[381] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=382
  OUTPUT[0] .. memory[382] => 0

[383] 104 => Instruction OUT (4)
inp param 0 (imm) = 1 <<-- addr1=384
  OUTPUT[1] .. memory[384] => 1

[385] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=386
inp param 1 (imm) = 179357024347 <<-- addr1=387
==> memory[388] -> memory[0+1] = 179357024347

[389] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=390
inp param 1 (imm) = 396 <<-- addr1=391
==> memory[392] -> memory[0+0] = 396

[393] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=394
inp param 1 (imm) = 442 <<-- addr1=395

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 2

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 179357024347 <<-- addr2=1 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[2+1] = 179357024347

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[2+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[2+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[2+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 6

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=5 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 179357024347 <<-- addr2=3 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 179357024347 <<-- addr2=3 <- addr1=525
==> memory[526] -> memory[6+1] = 179357024347

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=4 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[6+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[6+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[6+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 11

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=7 <- addr1=572
==> memory[573] -> memory[11+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[11+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[11+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[11+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 16

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=12 <- addr1=572
==> memory[573] -> memory[16+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[16+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[16+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[16+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 21

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=17 <- addr1=572
==> memory[573] -> memory[21+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[21+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[21+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[21+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 26

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=22 <- addr1=572
==> memory[573] -> memory[26+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[26+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[26+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[26+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 31

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=27 <- addr1=572
==> memory[573] -> memory[31+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[31+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[31+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[31+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 36

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=32 <- addr1=572
==> memory[573] -> memory[36+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[36+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[36+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[36+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 41

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=37 <- addr1=572
==> memory[573] -> memory[41+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[41+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[41+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[41+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 46

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=42 <- addr1=572
==> memory[573] -> memory[46+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[46+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[46+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[46+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 51

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=47 <- addr1=572
==> memory[573] -> memory[51+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[51+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[51+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[51+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 56

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=52 <- addr1=572
==> memory[573] -> memory[56+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[56+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[56+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[56+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 61

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=57 <- addr1=572
==> memory[573] -> memory[61+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[61+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[61+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[61+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 66

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=62 <- addr1=572
==> memory[573] -> memory[66+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[66+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[66+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[66+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 71

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=67 <- addr1=572
==> memory[573] -> memory[71+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[71+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[71+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[71+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 76

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=72 <- addr1=572
==> memory[573] -> memory[76+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[76+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[76+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[76+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 81

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=77 <- addr1=572
==> memory[573] -> memory[81+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[81+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[81+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[81+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 86

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=82 <- addr1=572
==> memory[573] -> memory[86+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[86+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[86+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[86+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 91

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=87 <- addr1=572
==> memory[573] -> memory[91+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[91+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[91+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[91+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 96

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=92 <- addr1=572
==> memory[573] -> memory[96+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[96+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[96+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[96+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 101

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=97 <- addr1=572
==> memory[573] -> memory[101+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[101+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[101+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[101+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 106

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=102 <- addr1=572
==> memory[573] -> memory[106+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[106+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[106+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[106+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 111

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=107 <- addr1=572
==> memory[573] -> memory[111+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[111+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[111+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[111+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 116

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=112 <- addr1=572
==> memory[573] -> memory[116+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[116+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[116+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[116+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 121

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=117 <- addr1=572
==> memory[573] -> memory[121+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[121+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[121+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[121+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 126

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=122 <- addr1=572
==> memory[573] -> memory[126+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[126+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[126+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[126+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 131

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=127 <- addr1=572
==> memory[573] -> memory[131+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[131+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[131+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[131+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 136

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=132 <- addr1=572
==> memory[573] -> memory[136+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[136+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[136+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[136+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 141

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=137 <- addr1=572
==> memory[573] -> memory[141+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[141+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[141+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[141+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 146

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=142 <- addr1=572
==> memory[573] -> memory[146+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[146+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[146+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[146+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 151

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=147 <- addr1=572
==> memory[573] -> memory[151+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[151+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[151+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[151+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 156

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=152 <- addr1=572
==> memory[573] -> memory[156+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[156+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[156+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[156+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 161

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=157 <- addr1=572
==> memory[573] -> memory[161+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[161+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[161+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[161+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 166

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=162 <- addr1=572
==> memory[573] -> memory[166+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[166+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[166+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[166+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 171

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=167 <- addr1=572
==> memory[573] -> memory[171+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[171+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[171+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[171+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 176

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=172 <- addr1=572
==> memory[573] -> memory[176+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[176+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[176+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[176+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 181

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=177 <- addr1=572
==> memory[573] -> memory[181+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[181+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[181+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[181+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 186

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=182 <- addr1=572
==> memory[573] -> memory[186+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[186+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[186+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[186+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 191

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=187 <- addr1=572
==> memory[573] -> memory[191+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[191+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[191+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[191+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 196

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=192 <- addr1=572
==> memory[573] -> memory[196+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[196+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[196+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[196+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 201

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=197 <- addr1=572
==> memory[573] -> memory[201+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[201+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[201+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[201+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 206

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 179357024347 <<-- addr2=202 <- addr1=572
==> memory[573] -> memory[206+1] = 179357024347

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[206+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[206+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[206+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 211

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=208 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 179357024347 <<-- addr2=207 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=209 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 179357024347 <<-- addr2=207 <- addr1=565
==> memory[566] -> memory[211+-4] = 179357024347

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 206

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=206 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 179357024347 <<-- addr2=207 <- addr1=591
==> memory[592] -> memory[206+-4] = 179357024347

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[206+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 179357024347 <<-- addr2=202 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=204 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[206+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=205 <- addr1=610
==> memory[611] -> memory[206+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=203 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=205 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[206+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[206+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 208
Input queue empty, returning ..
<  86> Painted (x: 41, y: -3) black, turned to  left, and then moved to (x: 40, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=207 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[208+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 206

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=206 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=204 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[206+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 179357024347 <<-- addr2=202 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=204 <- addr1=636
==> memory[637] -> memory[206+-4] = 179357024347

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 201

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=201 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 179357024347 <<-- addr2=202 <- addr1=591
==> memory[592] -> memory[201+-4] = 179357024347

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[201+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 179357024347 <<-- addr2=197 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=199 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[201+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=200 <- addr1=610
==> memory[611] -> memory[201+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=198 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=200 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[201+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[201+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 203
Input queue empty, returning ..
<  87> Painted (x: 40, y: -3) black, turned to    up, and then moved to (x: 40, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=202 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[203+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 201

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=201 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=199 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[201+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 179357024347 <<-- addr2=197 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=199 <- addr1=636
==> memory[637] -> memory[201+-4] = 179357024347

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 196

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=196 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 179357024347 <<-- addr2=197 <- addr1=591
==> memory[592] -> memory[196+-4] = 179357024347

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[196+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 179357024347 <<-- addr2=192 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=194 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=195 <- addr1=610
==> memory[611] -> memory[196+-2] = 137438953472

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=193 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=195 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[196+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[196+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 198
Input queue empty, returning ..
<  88> Painted (x: 40, y: -2) black, turned to  left, and then moved to (x: 39, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=197 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[198+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 196

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=196 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[196+-2] = -137438953472

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 179357024347 <<-- addr2=192 <- addr1=635
inp param 1 (rel) = -137438953472 <<-- addr2=194 <- addr1=636
==> memory[637] -> memory[196+-4] = 41918070875

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 191

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=191 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 41918070875 <<-- addr2=192 <- addr1=591
==> memory[592] -> memory[191+-4] = 41918070875

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[191+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 41918070875 <<-- addr2=187 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=189 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[191+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=190 <- addr1=610
==> memory[611] -> memory[191+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=188 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=190 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[191+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[191+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 193
Input queue empty, returning ..
<  89> Painted (x: 39, y: -2) white, turned to  down, and then moved to (x: 39, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=192 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[193+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 191

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=191 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=189 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[191+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 41918070875 <<-- addr2=187 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=189 <- addr1=636
==> memory[637] -> memory[191+-4] = 41918070875

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 186

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=186 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 41918070875 <<-- addr2=187 <- addr1=591
==> memory[592] -> memory[186+-4] = 41918070875

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[186+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 41918070875 <<-- addr2=182 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=184 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=185 <- addr1=610
==> memory[611] -> memory[186+-2] = 34359738368

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=183 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=185 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[186+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[186+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 188
Input queue empty, returning ..
<  90> Painted (x: 39, y: -3) black, turned to  left, and then moved to (x: 38, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=187 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[188+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 186

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=186 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[186+-2] = -34359738368

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 41918070875 <<-- addr2=182 <- addr1=635
inp param 1 (rel) = -34359738368 <<-- addr2=184 <- addr1=636
==> memory[637] -> memory[186+-4] = 7558332507

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 181

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=181 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7558332507 <<-- addr2=182 <- addr1=591
==> memory[592] -> memory[181+-4] = 7558332507

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[181+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7558332507 <<-- addr2=177 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=179 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[181+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=180 <- addr1=610
==> memory[611] -> memory[181+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=178 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=180 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[181+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[181+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 183
Input queue empty, returning ..
<  91> Painted (x: 38, y: -3) white, turned to    up, and then moved to (x: 38, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=182 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[183+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 181

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=181 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=179 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[181+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7558332507 <<-- addr2=177 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=179 <- addr1=636
==> memory[637] -> memory[181+-4] = 7558332507

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 176

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=176 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7558332507 <<-- addr2=177 <- addr1=591
==> memory[592] -> memory[176+-4] = 7558332507

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[176+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7558332507 <<-- addr2=172 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=174 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[176+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=175 <- addr1=610
==> memory[611] -> memory[176+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=173 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=175 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[176+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[176+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 178
Input queue empty, returning ..
<  92> Painted (x: 38, y: -2) black, turned to  left, and then moved to (x: 37, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=177 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[178+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 176

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=176 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=174 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[176+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7558332507 <<-- addr2=172 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=174 <- addr1=636
==> memory[637] -> memory[176+-4] = 7558332507

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 171

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=171 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7558332507 <<-- addr2=172 <- addr1=591
==> memory[592] -> memory[171+-4] = 7558332507

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[171+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7558332507 <<-- addr2=167 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=169 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=170 <- addr1=610
==> memory[611] -> memory[171+-2] = 4294967296

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=168 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=170 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[171+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[171+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 173
Input queue empty, returning ..
<  93> Painted (x: 37, y: -2) black, turned to  down, and then moved to (x: 37, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=172 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[173+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 171

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=171 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[171+-2] = -4294967296

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7558332507 <<-- addr2=167 <- addr1=635
inp param 1 (rel) = -4294967296 <<-- addr2=169 <- addr1=636
==> memory[637] -> memory[171+-4] = 3263365211

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 166

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=166 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3263365211 <<-- addr2=167 <- addr1=591
==> memory[592] -> memory[166+-4] = 3263365211

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[166+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3263365211 <<-- addr2=162 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=164 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=165 <- addr1=610
==> memory[611] -> memory[166+-2] = 2147483648

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=163 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=165 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[166+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[166+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 168
Input queue empty, returning ..
<  94> Painted (x: 37, y: -3) white, turned to  left, and then moved to (x: 36, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=167 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[168+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 166

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=166 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[166+-2] = -2147483648

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3263365211 <<-- addr2=162 <- addr1=635
inp param 1 (rel) = -2147483648 <<-- addr2=164 <- addr1=636
==> memory[637] -> memory[166+-4] = 1115881563

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 161

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=161 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1115881563 <<-- addr2=162 <- addr1=591
==> memory[592] -> memory[161+-4] = 1115881563

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[161+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1115881563 <<-- addr2=157 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=159 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=160 <- addr1=610
==> memory[611] -> memory[161+-2] = 1073741824

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=158 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=160 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[161+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[161+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 163
Input queue empty, returning ..
<  95> Painted (x: 36, y: -3) white, turned to    up, and then moved to (x: 36, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=162 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[163+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 161

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=161 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[161+-2] = -1073741824

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1115881563 <<-- addr2=157 <- addr1=635
inp param 1 (rel) = -1073741824 <<-- addr2=159 <- addr1=636
==> memory[637] -> memory[161+-4] = 42139739

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 156

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=156 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42139739 <<-- addr2=157 <- addr1=591
==> memory[592] -> memory[156+-4] = 42139739

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[156+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42139739 <<-- addr2=152 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=154 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[156+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=155 <- addr1=610
==> memory[611] -> memory[156+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=153 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=155 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[156+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[156+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 158
Input queue empty, returning ..
<  96> Painted (x: 36, y: -2) white, turned to  left, and then moved to (x: 35, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=157 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[158+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 156

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=156 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=154 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[156+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42139739 <<-- addr2=152 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=154 <- addr1=636
==> memory[637] -> memory[156+-4] = 42139739

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 151

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=151 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42139739 <<-- addr2=152 <- addr1=591
==> memory[592] -> memory[151+-4] = 42139739

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[151+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42139739 <<-- addr2=147 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=149 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[151+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=150 <- addr1=610
==> memory[611] -> memory[151+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=148 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=150 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[151+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[151+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 153
Input queue empty, returning ..
<  97> Painted (x: 35, y: -2) black, turned to  down, and then moved to (x: 35, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=152 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[153+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 151

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=151 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=149 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[151+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42139739 <<-- addr2=147 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=149 <- addr1=636
==> memory[637] -> memory[151+-4] = 42139739

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 146

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=146 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42139739 <<-- addr2=147 <- addr1=591
==> memory[592] -> memory[146+-4] = 42139739

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[146+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42139739 <<-- addr2=142 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=144 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[146+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=145 <- addr1=610
==> memory[611] -> memory[146+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=143 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=145 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[146+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[146+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 148
Input queue empty, returning ..
<  98> Painted (x: 35, y: -3) black, turned to  left, and then moved to (x: 34, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=147 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[148+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 146

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=146 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=144 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[146+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42139739 <<-- addr2=142 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=144 <- addr1=636
==> memory[637] -> memory[146+-4] = 42139739

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 141

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=141 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42139739 <<-- addr2=142 <- addr1=591
==> memory[592] -> memory[141+-4] = 42139739

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[141+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42139739 <<-- addr2=137 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=139 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[141+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=140 <- addr1=610
==> memory[611] -> memory[141+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=138 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=140 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[141+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[141+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 143
Input queue empty, returning ..
<  99> Painted (x: 34, y: -3) black, turned to    up, and then moved to (x: 34, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=142 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[143+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 141

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=141 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=139 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[141+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42139739 <<-- addr2=137 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=139 <- addr1=636
==> memory[637] -> memory[141+-4] = 42139739

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 136

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=136 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42139739 <<-- addr2=137 <- addr1=591
==> memory[592] -> memory[136+-4] = 42139739

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[136+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42139739 <<-- addr2=132 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=134 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=135 <- addr1=610
==> memory[611] -> memory[136+-2] = 33554432

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=133 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=135 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[136+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[136+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 138
Input queue empty, returning ..
< 100> Painted (x: 34, y: -2) black, turned to  left, and then moved to (x: 33, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=137 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[138+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 136

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=136 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[136+-2] = -33554432

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42139739 <<-- addr2=132 <- addr1=635
inp param 1 (rel) = -33554432 <<-- addr2=134 <- addr1=636
==> memory[637] -> memory[136+-4] = 8585307

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 131

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=131 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8585307 <<-- addr2=132 <- addr1=591
==> memory[592] -> memory[131+-4] = 8585307

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[131+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8585307 <<-- addr2=127 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=129 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[131+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=130 <- addr1=610
==> memory[611] -> memory[131+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=128 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=130 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[131+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[131+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 133
Input queue empty, returning ..
< 101> Painted (x: 33, y: -2) white, turned to  down, and then moved to (x: 33, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=132 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[133+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 131

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=131 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=129 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[131+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8585307 <<-- addr2=127 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=129 <- addr1=636
==> memory[637] -> memory[131+-4] = 8585307

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 126

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=126 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8585307 <<-- addr2=127 <- addr1=591
==> memory[592] -> memory[126+-4] = 8585307

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[126+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8585307 <<-- addr2=122 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=124 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=125 <- addr1=610
==> memory[611] -> memory[126+-2] = 8388608

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=123 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=125 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[126+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[126+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 128
Input queue empty, returning ..
< 102> Painted (x: 33, y: -3) black, turned to  left, and then moved to (x: 32, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=127 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[128+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 126

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=126 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[126+-2] = -8388608

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8585307 <<-- addr2=122 <- addr1=635
inp param 1 (rel) = -8388608 <<-- addr2=124 <- addr1=636
==> memory[637] -> memory[126+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 121

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=121 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=122 <- addr1=591
==> memory[592] -> memory[121+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[121+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=117 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=119 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[121+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=120 <- addr1=610
==> memory[611] -> memory[121+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=118 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=120 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[121+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[121+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 123
Input queue empty, returning ..
< 103> Painted (x: 32, y: -3) white, turned to    up, and then moved to (x: 32, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=122 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[123+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 121

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=121 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=119 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[121+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=117 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=119 <- addr1=636
==> memory[637] -> memory[121+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 116

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=116 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=117 <- addr1=591
==> memory[592] -> memory[116+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[116+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=112 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=114 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[116+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=115 <- addr1=610
==> memory[611] -> memory[116+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=113 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=115 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[116+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[116+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 118
Input queue empty, returning ..
< 104> Painted (x: 32, y: -2) black, turned to  left, and then moved to (x: 31, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=117 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[118+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 116

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=116 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=114 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[116+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=112 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=114 <- addr1=636
==> memory[637] -> memory[116+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 111

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=111 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=112 <- addr1=591
==> memory[592] -> memory[111+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[111+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=107 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=109 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[111+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=110 <- addr1=610
==> memory[611] -> memory[111+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=108 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=110 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[111+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[111+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 113
Input queue empty, returning ..
< 105> Painted (x: 31, y: -2) black, turned to  down, and then moved to (x: 31, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=112 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[113+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 111

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=111 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=109 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[111+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=107 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=109 <- addr1=636
==> memory[637] -> memory[111+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 106

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=106 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=107 <- addr1=591
==> memory[592] -> memory[106+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[106+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=102 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=104 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[106+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=105 <- addr1=610
==> memory[611] -> memory[106+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=103 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=105 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[106+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[106+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 108
Input queue empty, returning ..
< 106> Painted (x: 31, y: -3) black, turned to  left, and then moved to (x: 30, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=107 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[108+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 106

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=106 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=104 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[106+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=102 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=104 <- addr1=636
==> memory[637] -> memory[106+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 101

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=101 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=102 <- addr1=591
==> memory[592] -> memory[101+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[101+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=97 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=99 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[101+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=100 <- addr1=610
==> memory[611] -> memory[101+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=98 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=100 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[101+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[101+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 103
Input queue empty, returning ..
< 107> Painted (x: 30, y: -3) black, turned to    up, and then moved to (x: 30, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=102 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[103+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 101

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=101 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=99 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[101+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=97 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=99 <- addr1=636
==> memory[637] -> memory[101+-4] = 196699

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 96

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=96 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 196699 <<-- addr2=97 <- addr1=591
==> memory[592] -> memory[96+-4] = 196699

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[96+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 196699 <<-- addr2=92 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=94 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=95 <- addr1=610
==> memory[611] -> memory[96+-2] = 131072

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=93 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=95 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[96+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[96+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 98
Input queue empty, returning ..
< 108> Painted (x: 30, y: -2) black, turned to  left, and then moved to (x: 29, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=97 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[98+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 96

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=96 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[96+-2] = -131072

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 196699 <<-- addr2=92 <- addr1=635
inp param 1 (rel) = -131072 <<-- addr2=94 <- addr1=636
==> memory[637] -> memory[96+-4] = 65627

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 91

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=91 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 65627 <<-- addr2=92 <- addr1=591
==> memory[592] -> memory[91+-4] = 65627

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[91+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 65627 <<-- addr2=87 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=89 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=90 <- addr1=610
==> memory[611] -> memory[91+-2] = 65536

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=88 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=90 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[91+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[91+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 93
Input queue empty, returning ..
< 109> Painted (x: 29, y: -2) white, turned to  down, and then moved to (x: 29, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=92 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[93+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 91

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=91 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[91+-2] = -65536

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 65627 <<-- addr2=87 <- addr1=635
inp param 1 (rel) = -65536 <<-- addr2=89 <- addr1=636
==> memory[637] -> memory[91+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 86

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=86 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=87 <- addr1=591
==> memory[592] -> memory[86+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[86+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=82 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=84 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[86+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=85 <- addr1=610
==> memory[611] -> memory[86+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=83 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=85 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[86+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[86+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 88
Input queue empty, returning ..
< 110> Painted (x: 29, y: -3) white, turned to  left, and then moved to (x: 28, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=87 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[88+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 86

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=86 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=84 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[86+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=82 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=84 <- addr1=636
==> memory[637] -> memory[86+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 81

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=81 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=82 <- addr1=591
==> memory[592] -> memory[81+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[81+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=77 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=79 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[81+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=80 <- addr1=610
==> memory[611] -> memory[81+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=78 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=80 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[81+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[81+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 83
Input queue empty, returning ..
< 111> Painted (x: 28, y: -3) black, turned to    up, and then moved to (x: 28, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=82 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[83+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 81

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=81 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=79 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[81+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=77 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=79 <- addr1=636
==> memory[637] -> memory[81+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 76

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=76 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=77 <- addr1=591
==> memory[592] -> memory[76+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[76+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=72 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=74 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[76+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=75 <- addr1=610
==> memory[611] -> memory[76+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=73 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=75 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[76+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[76+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 78
Input queue empty, returning ..
< 112> Painted (x: 28, y: -2) black, turned to  left, and then moved to (x: 27, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=77 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[78+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 76

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=76 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=74 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[76+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=72 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=74 <- addr1=636
==> memory[637] -> memory[76+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 71

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=71 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=72 <- addr1=591
==> memory[592] -> memory[71+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[71+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=67 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=69 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[71+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=70 <- addr1=610
==> memory[611] -> memory[71+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=68 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=70 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[71+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[71+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 73
Input queue empty, returning ..
< 113> Painted (x: 27, y: -2) black, turned to  down, and then moved to (x: 27, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=72 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[73+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 71

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=71 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=69 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[71+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=67 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=69 <- addr1=636
==> memory[637] -> memory[71+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 66

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=66 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=67 <- addr1=591
==> memory[592] -> memory[66+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[66+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=62 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=64 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[66+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=65 <- addr1=610
==> memory[611] -> memory[66+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=63 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=65 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[66+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[66+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 68
Input queue empty, returning ..
< 114> Painted (x: 27, y: -3) black, turned to  left, and then moved to (x: 26, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=67 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[68+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 66

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=66 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=64 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[66+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=62 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=64 <- addr1=636
==> memory[637] -> memory[66+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 61

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=61 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=62 <- addr1=591
==> memory[592] -> memory[61+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[61+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=57 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=59 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[61+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=60 <- addr1=610
==> memory[611] -> memory[61+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=58 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=60 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[61+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[61+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 63
Input queue empty, returning ..
< 115> Painted (x: 26, y: -3) black, turned to    up, and then moved to (x: 26, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=62 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[63+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 61

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=61 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=59 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[61+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=57 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=59 <- addr1=636
==> memory[637] -> memory[61+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 56

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=56 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=57 <- addr1=591
==> memory[592] -> memory[56+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[56+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=52 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=54 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[56+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=55 <- addr1=610
==> memory[611] -> memory[56+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=53 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=55 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[56+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[56+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 58
Input queue empty, returning ..
< 116> Painted (x: 26, y: -2) black, turned to  left, and then moved to (x: 25, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=57 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[58+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 56

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=56 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=54 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[56+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=52 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=54 <- addr1=636
==> memory[637] -> memory[56+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 51

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=51 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=52 <- addr1=591
==> memory[592] -> memory[51+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[51+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=47 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=49 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[51+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=50 <- addr1=610
==> memory[611] -> memory[51+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=48 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=50 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[51+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[51+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 53
Input queue empty, returning ..
< 117> Painted (x: 25, y: -2) black, turned to  down, and then moved to (x: 25, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=52 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[53+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 51

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=51 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=49 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[51+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=47 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=49 <- addr1=636
==> memory[637] -> memory[51+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 46

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=46 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=47 <- addr1=591
==> memory[592] -> memory[46+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[46+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=42 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=44 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[46+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=45 <- addr1=610
==> memory[611] -> memory[46+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=43 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=45 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[46+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[46+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 48
Input queue empty, returning ..
< 118> Painted (x: 25, y: -3) black, turned to  left, and then moved to (x: 24, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=47 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[48+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 46

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=46 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=44 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[46+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=42 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=44 <- addr1=636
==> memory[637] -> memory[46+-4] = 91

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 41

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=41 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 91 <<-- addr2=42 <- addr1=591
==> memory[592] -> memory[41+-4] = 91

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[41+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 91 <<-- addr2=37 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=39 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=40 <- addr1=610
==> memory[611] -> memory[41+-2] = 64

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=38 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=40 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[41+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[41+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 43
Input queue empty, returning ..
< 119> Painted (x: 24, y: -3) black, turned to    up, and then moved to (x: 24, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=42 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[43+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 41

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=41 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[41+-2] = -64

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 91 <<-- addr2=37 <- addr1=635
inp param 1 (rel) = -64 <<-- addr2=39 <- addr1=636
==> memory[637] -> memory[41+-4] = 27

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 36

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=36 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 27 <<-- addr2=37 <- addr1=591
==> memory[592] -> memory[36+-4] = 27

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[36+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=32 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=34 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[36+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=35 <- addr1=610
==> memory[611] -> memory[36+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=33 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=35 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[36+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[36+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 38
Input queue empty, returning ..
< 120> Painted (x: 24, y: -2) white, turned to  left, and then moved to (x: 23, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=37 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[38+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 36

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=36 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=34 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[36+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=32 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=34 <- addr1=636
==> memory[637] -> memory[36+-4] = 27

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 31

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=31 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 27 <<-- addr2=32 <- addr1=591
==> memory[592] -> memory[31+-4] = 27

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[31+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=27 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=29 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=30 <- addr1=610
==> memory[611] -> memory[31+-2] = 16

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=28 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=30 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[31+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[31+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 33
Input queue empty, returning ..
< 121> Painted (x: 23, y: -2) black, turned to  down, and then moved to (x: 23, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=32 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[33+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 31

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=31 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[31+-2] = -16

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=27 <- addr1=635
inp param 1 (rel) = -16 <<-- addr2=29 <- addr1=636
==> memory[637] -> memory[31+-4] = 11

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 26

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=26 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 11 <<-- addr2=27 <- addr1=591
==> memory[592] -> memory[26+-4] = 11

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[26+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=22 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=24 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=25 <- addr1=610
==> memory[611] -> memory[26+-2] = 8

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=23 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=25 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[26+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[26+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 28
Input queue empty, returning ..
< 122> Painted (x: 23, y: -3) white, turned to  left, and then moved to (x: 22, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=27 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[28+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 26

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=26 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[26+-2] = -8

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=22 <- addr1=635
inp param 1 (rel) = -8 <<-- addr2=24 <- addr1=636
==> memory[637] -> memory[26+-4] = 3

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 21

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=21 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3 <<-- addr2=22 <- addr1=591
==> memory[592] -> memory[21+-4] = 3

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[21+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=17 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=19 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[21+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=20 <- addr1=610
==> memory[611] -> memory[21+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=18 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=20 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[21+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[21+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 23
Input queue empty, returning ..
< 123> Painted (x: 22, y: -3) white, turned to    up, and then moved to (x: 22, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=22 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[23+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 21

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=21 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=19 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[21+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=17 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=19 <- addr1=636
==> memory[637] -> memory[21+-4] = 3

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 16

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=16 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3 <<-- addr2=17 <- addr1=591
==> memory[592] -> memory[16+-4] = 3

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[16+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=12 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=14 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=15 <- addr1=610
==> memory[611] -> memory[16+-2] = 2

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=13 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=15 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[16+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[16+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 18
Input queue empty, returning ..
< 124> Painted (x: 22, y: -2) black, turned to  left, and then moved to (x: 21, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=17 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[18+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 16

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=16 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[16+-2] = -2

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=12 <- addr1=635
inp param 1 (rel) = -2 <<-- addr2=14 <- addr1=636
==> memory[637] -> memory[16+-4] = 1

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 11

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=11 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1 <<-- addr2=12 <- addr1=591
==> memory[592] -> memory[11+-4] = 1

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[11+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=7 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=9 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=10 <- addr1=610
==> memory[611] -> memory[11+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=8 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=10 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[11+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[11+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 13
Input queue empty, returning ..
< 125> Painted (x: 21, y: -2) white, turned to  down, and then moved to (x: 21, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=12 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[13+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 11

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=11 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=9 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[11+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=7 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=9 <- addr1=636
==> memory[637] -> memory[11+-4] = 1

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 6

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=6 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 2

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=2 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 0

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 396 <<-- addr2=0 <- addr1=467

[396] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=397
inp param 1 (imm) = 29166144659 <<-- addr1=398
==> memory[399] -> memory[0+1] = 29166144659

[400] 21102 => Instruction MUL (2)
inp param 0 (imm) = 407 <<-- addr1=401
inp param 1 (imm) = 1 <<-- addr1=402
==> memory[403] -> memory[0+0] = 407

[404] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=405
inp param 1 (imm) = 442 <<-- addr1=406

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 2

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 29166144659 <<-- addr2=1 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[2+1] = 29166144659

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[2+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[2+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[2+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 6

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=5 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=3 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 29166144659 <<-- addr2=3 <- addr1=525
==> memory[526] -> memory[6+1] = 29166144659

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=4 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[6+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[6+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[6+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 11

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=7 <- addr1=572
==> memory[573] -> memory[11+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[11+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[11+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[11+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 16

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=12 <- addr1=572
==> memory[573] -> memory[16+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[16+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[16+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[16+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 21

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=17 <- addr1=572
==> memory[573] -> memory[21+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[21+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[21+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[21+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 26

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=22 <- addr1=572
==> memory[573] -> memory[26+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[26+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[26+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[26+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 31

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=27 <- addr1=572
==> memory[573] -> memory[31+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[31+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[31+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[31+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 36

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=32 <- addr1=572
==> memory[573] -> memory[36+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[36+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[36+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[36+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 41

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=37 <- addr1=572
==> memory[573] -> memory[41+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[41+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[41+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[41+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 46

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=42 <- addr1=572
==> memory[573] -> memory[46+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[46+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[46+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[46+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 51

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=47 <- addr1=572
==> memory[573] -> memory[51+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[51+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[51+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[51+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 56

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=52 <- addr1=572
==> memory[573] -> memory[56+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[56+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[56+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[56+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 61

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=57 <- addr1=572
==> memory[573] -> memory[61+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[61+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[61+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[61+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 66

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=62 <- addr1=572
==> memory[573] -> memory[66+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[66+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[66+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[66+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 71

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=67 <- addr1=572
==> memory[573] -> memory[71+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[71+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[71+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[71+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 76

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=72 <- addr1=572
==> memory[573] -> memory[76+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[76+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[76+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[76+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 81

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=77 <- addr1=572
==> memory[573] -> memory[81+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[81+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[81+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[81+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 86

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=82 <- addr1=572
==> memory[573] -> memory[86+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[86+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[86+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[86+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 91

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=87 <- addr1=572
==> memory[573] -> memory[91+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[91+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[91+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[91+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 96

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=92 <- addr1=572
==> memory[573] -> memory[96+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[96+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[96+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[96+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 101

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=97 <- addr1=572
==> memory[573] -> memory[101+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[101+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[101+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[101+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 106

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=102 <- addr1=572
==> memory[573] -> memory[106+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[106+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[106+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[106+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 111

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=107 <- addr1=572
==> memory[573] -> memory[111+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[111+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[111+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[111+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 116

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=112 <- addr1=572
==> memory[573] -> memory[116+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[116+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[116+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[116+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 121

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=117 <- addr1=572
==> memory[573] -> memory[121+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[121+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[121+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[121+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 126

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=122 <- addr1=572
==> memory[573] -> memory[126+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[126+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[126+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[126+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 131

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=127 <- addr1=572
==> memory[573] -> memory[131+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[131+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[131+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[131+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 136

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=132 <- addr1=572
==> memory[573] -> memory[136+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[136+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[136+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[136+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 141

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=137 <- addr1=572
==> memory[573] -> memory[141+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[141+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[141+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[141+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 146

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=142 <- addr1=572
==> memory[573] -> memory[146+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[146+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[146+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[146+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 151

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=147 <- addr1=572
==> memory[573] -> memory[151+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[151+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[151+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[151+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 156

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=152 <- addr1=572
==> memory[573] -> memory[156+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[156+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[156+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[156+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 161

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=157 <- addr1=572
==> memory[573] -> memory[161+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[161+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[161+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[161+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 166

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=162 <- addr1=572
==> memory[573] -> memory[166+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[166+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[166+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[166+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 171

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=167 <- addr1=572
==> memory[573] -> memory[171+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[171+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[171+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[171+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 176

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=172 <- addr1=572
==> memory[573] -> memory[176+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[176+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[176+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[176+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 181

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=177 <- addr1=572
==> memory[573] -> memory[181+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[181+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[181+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[181+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 186

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=182 <- addr1=572
==> memory[573] -> memory[186+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[186+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[186+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[186+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 191

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=187 <- addr1=572
==> memory[573] -> memory[191+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[191+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[191+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[191+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 196

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=192 <- addr1=572
==> memory[573] -> memory[196+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[196+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[196+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[196+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 201

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=197 <- addr1=572
==> memory[573] -> memory[201+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[201+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[201+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[201+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 206

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 29166144659 <<-- addr2=202 <- addr1=572
==> memory[573] -> memory[206+1] = 29166144659

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[206+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[206+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[206+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 211

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=208 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=207 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=209 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 29166144659 <<-- addr2=207 <- addr1=565
==> memory[566] -> memory[211+-4] = 29166144659

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 206

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=206 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=207 <- addr1=591
==> memory[592] -> memory[206+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[206+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=202 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=204 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[206+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=205 <- addr1=610
==> memory[611] -> memory[206+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=203 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=205 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[206+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[206+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 208
Input queue empty, returning ..
< 126> Painted (x: 21, y: -3) white, turned to  left, and then moved to (x: 20, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=207 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[208+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 206

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=206 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=204 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[206+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=202 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=204 <- addr1=636
==> memory[637] -> memory[206+-4] = 29166144659

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 201

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=201 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=202 <- addr1=591
==> memory[592] -> memory[201+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[201+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=197 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=199 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[201+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=200 <- addr1=610
==> memory[611] -> memory[201+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=198 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=200 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[201+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[201+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 203
Input queue empty, returning ..
< 127> Painted (x: 20, y: -3) black, turned to    up, and then moved to (x: 20, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=202 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[203+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 201

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=201 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=199 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[201+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=197 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=199 <- addr1=636
==> memory[637] -> memory[201+-4] = 29166144659

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 196

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=196 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=197 <- addr1=591
==> memory[592] -> memory[196+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[196+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=192 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=194 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[196+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=195 <- addr1=610
==> memory[611] -> memory[196+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=193 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=195 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[196+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[196+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 198
Input queue empty, returning ..
< 128> Painted (x: 20, y: -2) black, turned to  left, and then moved to (x: 19, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=197 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[198+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 196

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=196 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=194 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[196+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=192 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=194 <- addr1=636
==> memory[637] -> memory[196+-4] = 29166144659

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 191

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=191 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=192 <- addr1=591
==> memory[592] -> memory[191+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[191+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=187 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=189 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[191+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=190 <- addr1=610
==> memory[611] -> memory[191+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=188 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=190 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[191+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[191+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 193
Input queue empty, returning ..
< 129> Painted (x: 19, y: -2) black, turned to  down, and then moved to (x: 19, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=192 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[193+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 191

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=191 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=189 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[191+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=187 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=189 <- addr1=636
==> memory[637] -> memory[191+-4] = 29166144659

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 186

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=186 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=187 <- addr1=591
==> memory[592] -> memory[186+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[186+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=182 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=184 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[186+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=185 <- addr1=610
==> memory[611] -> memory[186+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=183 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=185 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[186+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[186+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 188
Input queue empty, returning ..
< 130> Painted (x: 19, y: -3) black, turned to  left, and then moved to (x: 18, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=187 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[188+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 186

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=186 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=184 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[186+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=182 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=184 <- addr1=636
==> memory[637] -> memory[186+-4] = 29166144659

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 181

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=181 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 29166144659 <<-- addr2=182 <- addr1=591
==> memory[592] -> memory[181+-4] = 29166144659

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[181+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 29166144659 <<-- addr2=177 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=179 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=180 <- addr1=610
==> memory[611] -> memory[181+-2] = 17179869184

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=178 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=180 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[181+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[181+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 183
Input queue empty, returning ..
< 131> Painted (x: 18, y: -3) black, turned to    up, and then moved to (x: 18, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=182 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[183+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 181

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=181 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[181+-2] = -17179869184

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 29166144659 <<-- addr2=177 <- addr1=635
inp param 1 (rel) = -17179869184 <<-- addr2=179 <- addr1=636
==> memory[637] -> memory[181+-4] = 11986275475

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 176

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=176 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 11986275475 <<-- addr2=177 <- addr1=591
==> memory[592] -> memory[176+-4] = 11986275475

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[176+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 11986275475 <<-- addr2=172 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=174 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=175 <- addr1=610
==> memory[611] -> memory[176+-2] = 8589934592

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=173 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=175 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[176+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[176+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 178
Input queue empty, returning ..
< 132> Painted (x: 18, y: -2) white, turned to  left, and then moved to (x: 17, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=177 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[178+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 176

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=176 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[176+-2] = -8589934592

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 11986275475 <<-- addr2=172 <- addr1=635
inp param 1 (rel) = -8589934592 <<-- addr2=174 <- addr1=636
==> memory[637] -> memory[176+-4] = 3396340883

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 171

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=171 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3396340883 <<-- addr2=172 <- addr1=591
==> memory[592] -> memory[171+-4] = 3396340883

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[171+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3396340883 <<-- addr2=167 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=169 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[171+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=170 <- addr1=610
==> memory[611] -> memory[171+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=168 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=170 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[171+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[171+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 173
Input queue empty, returning ..
< 133> Painted (x: 17, y: -2) white, turned to  down, and then moved to (x: 17, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=172 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[173+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 171

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=171 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=169 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[171+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3396340883 <<-- addr2=167 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=169 <- addr1=636
==> memory[637] -> memory[171+-4] = 3396340883

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 166

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=166 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3396340883 <<-- addr2=167 <- addr1=591
==> memory[592] -> memory[166+-4] = 3396340883

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[166+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3396340883 <<-- addr2=162 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=164 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=165 <- addr1=610
==> memory[611] -> memory[166+-2] = 2147483648

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=163 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=165 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[166+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[166+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 168
Input queue empty, returning ..
< 134> Painted (x: 17, y: -3) black, turned to  left, and then moved to (x: 16, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=167 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[168+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 166

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=166 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[166+-2] = -2147483648

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3396340883 <<-- addr2=162 <- addr1=635
inp param 1 (rel) = -2147483648 <<-- addr2=164 <- addr1=636
==> memory[637] -> memory[166+-4] = 1248857235

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 161

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=161 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1248857235 <<-- addr2=162 <- addr1=591
==> memory[592] -> memory[161+-4] = 1248857235

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[161+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1248857235 <<-- addr2=157 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=159 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=160 <- addr1=610
==> memory[611] -> memory[161+-2] = 1073741824

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=158 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=160 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[161+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[161+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 163
Input queue empty, returning ..
< 135> Painted (x: 16, y: -3) white, turned to    up, and then moved to (x: 16, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=162 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[163+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 161

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=161 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[161+-2] = -1073741824

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1248857235 <<-- addr2=157 <- addr1=635
inp param 1 (rel) = -1073741824 <<-- addr2=159 <- addr1=636
==> memory[637] -> memory[161+-4] = 175115411

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 156

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=156 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 175115411 <<-- addr2=157 <- addr1=591
==> memory[592] -> memory[156+-4] = 175115411

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[156+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 175115411 <<-- addr2=152 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=154 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[156+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=155 <- addr1=610
==> memory[611] -> memory[156+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=153 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=155 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[156+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[156+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 158
Input queue empty, returning ..
< 136> Painted (x: 16, y: -2) white, turned to  left, and then moved to (x: 15, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=157 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[158+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 156

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=156 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=154 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[156+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 175115411 <<-- addr2=152 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=154 <- addr1=636
==> memory[637] -> memory[156+-4] = 175115411

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 151

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=151 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 175115411 <<-- addr2=152 <- addr1=591
==> memory[592] -> memory[151+-4] = 175115411

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[151+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 175115411 <<-- addr2=147 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=149 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[151+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=150 <- addr1=610
==> memory[611] -> memory[151+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=148 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=150 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[151+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[151+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 153
Input queue empty, returning ..
< 137> Painted (x: 15, y: -2) black, turned to  down, and then moved to (x: 15, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=152 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[153+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 151

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=151 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=149 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[151+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 175115411 <<-- addr2=147 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=149 <- addr1=636
==> memory[637] -> memory[151+-4] = 175115411

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 146

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=146 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 175115411 <<-- addr2=147 <- addr1=591
==> memory[592] -> memory[146+-4] = 175115411

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[146+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 175115411 <<-- addr2=142 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=144 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=145 <- addr1=610
==> memory[611] -> memory[146+-2] = 134217728

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=143 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=145 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[146+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[146+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 148
Input queue empty, returning ..
< 138> Painted (x: 15, y: -3) black, turned to  left, and then moved to (x: 14, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=147 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[148+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 146

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=146 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[146+-2] = -134217728

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 175115411 <<-- addr2=142 <- addr1=635
inp param 1 (rel) = -134217728 <<-- addr2=144 <- addr1=636
==> memory[637] -> memory[146+-4] = 40897683

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 141

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=141 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 40897683 <<-- addr2=142 <- addr1=591
==> memory[592] -> memory[141+-4] = 40897683

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[141+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 40897683 <<-- addr2=137 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=139 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[141+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=140 <- addr1=610
==> memory[611] -> memory[141+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=138 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=140 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[141+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[141+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 143
Input queue empty, returning ..
< 139> Painted (x: 14, y: -3) white, turned to    up, and then moved to (x: 14, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=142 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[143+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 141

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=141 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=139 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[141+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 40897683 <<-- addr2=137 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=139 <- addr1=636
==> memory[637] -> memory[141+-4] = 40897683

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 136

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=136 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 40897683 <<-- addr2=137 <- addr1=591
==> memory[592] -> memory[136+-4] = 40897683

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[136+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 40897683 <<-- addr2=132 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=134 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=135 <- addr1=610
==> memory[611] -> memory[136+-2] = 33554432

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=133 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=135 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[136+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[136+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 138
Input queue empty, returning ..
< 140> Painted (x: 14, y: -2) black, turned to  left, and then moved to (x: 13, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=137 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[138+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 136

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=136 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[136+-2] = -33554432

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 40897683 <<-- addr2=132 <- addr1=635
inp param 1 (rel) = -33554432 <<-- addr2=134 <- addr1=636
==> memory[637] -> memory[136+-4] = 7343251

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 131

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=131 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7343251 <<-- addr2=132 <- addr1=591
==> memory[592] -> memory[131+-4] = 7343251

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[131+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7343251 <<-- addr2=127 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=129 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[131+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=130 <- addr1=610
==> memory[611] -> memory[131+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=128 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=130 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[131+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[131+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 133
Input queue empty, returning ..
< 141> Painted (x: 13, y: -2) white, turned to  down, and then moved to (x: 13, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=132 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[133+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 131

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=131 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=129 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[131+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7343251 <<-- addr2=127 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=129 <- addr1=636
==> memory[637] -> memory[131+-4] = 7343251

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 126

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=126 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7343251 <<-- addr2=127 <- addr1=591
==> memory[592] -> memory[126+-4] = 7343251

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[126+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7343251 <<-- addr2=122 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=124 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[126+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=125 <- addr1=610
==> memory[611] -> memory[126+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=123 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=125 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[126+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[126+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 128
Input queue empty, returning ..
< 142> Painted (x: 13, y: -3) black, turned to  left, and then moved to (x: 12, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=127 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[128+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 126

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=126 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=124 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[126+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7343251 <<-- addr2=122 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=124 <- addr1=636
==> memory[637] -> memory[126+-4] = 7343251

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 121

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=121 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 7343251 <<-- addr2=122 <- addr1=591
==> memory[592] -> memory[121+-4] = 7343251

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[121+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 7343251 <<-- addr2=117 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=119 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=120 <- addr1=610
==> memory[611] -> memory[121+-2] = 4194304

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=118 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=120 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[121+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[121+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 123
Input queue empty, returning ..
< 143> Painted (x: 12, y: -3) black, turned to    up, and then moved to (x: 12, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=122 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[123+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 121

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=121 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[121+-2] = -4194304

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 7343251 <<-- addr2=117 <- addr1=635
inp param 1 (rel) = -4194304 <<-- addr2=119 <- addr1=636
==> memory[637] -> memory[121+-4] = 3148947

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 116

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=116 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3148947 <<-- addr2=117 <- addr1=591
==> memory[592] -> memory[116+-4] = 3148947

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[116+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3148947 <<-- addr2=112 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=114 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=115 <- addr1=610
==> memory[611] -> memory[116+-2] = 2097152

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=113 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=115 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[116+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[116+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 118
Input queue empty, returning ..
< 144> Painted (x: 12, y: -2) white, turned to  left, and then moved to (x: 11, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=117 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[118+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 116

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=116 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[116+-2] = -2097152

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3148947 <<-- addr2=112 <- addr1=635
inp param 1 (rel) = -2097152 <<-- addr2=114 <- addr1=636
==> memory[637] -> memory[116+-4] = 1051795

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 111

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=111 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1051795 <<-- addr2=112 <- addr1=591
==> memory[592] -> memory[111+-4] = 1051795

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[111+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1051795 <<-- addr2=107 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=109 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=110 <- addr1=610
==> memory[611] -> memory[111+-2] = 1048576

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=108 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=110 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[111+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[111+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 113
Input queue empty, returning ..
< 145> Painted (x: 11, y: -2) white, turned to  down, and then moved to (x: 11, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=112 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[113+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 111

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=111 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[111+-2] = -1048576

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1051795 <<-- addr2=107 <- addr1=635
inp param 1 (rel) = -1048576 <<-- addr2=109 <- addr1=636
==> memory[637] -> memory[111+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 106

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=106 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=107 <- addr1=591
==> memory[592] -> memory[106+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[106+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=102 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=104 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[106+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=105 <- addr1=610
==> memory[611] -> memory[106+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=103 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=105 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[106+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[106+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 108
Input queue empty, returning ..
< 146> Painted (x: 11, y: -3) white, turned to  left, and then moved to (x: 10, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=107 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[108+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 106

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=106 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=104 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[106+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=102 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=104 <- addr1=636
==> memory[637] -> memory[106+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 101

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=101 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=102 <- addr1=591
==> memory[592] -> memory[101+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[101+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=97 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=99 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[101+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=100 <- addr1=610
==> memory[611] -> memory[101+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=98 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=100 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[101+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[101+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 103
Input queue empty, returning ..
< 147> Painted (x: 10, y: -3) black, turned to    up, and then moved to (x: 10, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=102 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[103+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 101

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=101 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=99 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[101+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=97 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=99 <- addr1=636
==> memory[637] -> memory[101+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 96

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=96 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=97 <- addr1=591
==> memory[592] -> memory[96+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[96+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=92 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=94 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[96+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=95 <- addr1=610
==> memory[611] -> memory[96+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=93 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=95 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[96+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[96+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 98
Input queue empty, returning ..
< 148> Painted (x: 10, y: -2) black, turned to  left, and then moved to (x: 9, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=97 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[98+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 96

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=96 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=94 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[96+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=92 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=94 <- addr1=636
==> memory[637] -> memory[96+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 91

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=91 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=92 <- addr1=591
==> memory[592] -> memory[91+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[91+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=87 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=89 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[91+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=90 <- addr1=610
==> memory[611] -> memory[91+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=88 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=90 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[91+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[91+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 93
Input queue empty, returning ..
< 149> Painted (x: 9, y: -2) black, turned to  down, and then moved to (x: 9, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=92 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[93+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 91

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=91 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=89 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[91+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=87 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=89 <- addr1=636
==> memory[637] -> memory[91+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 86

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=86 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=87 <- addr1=591
==> memory[592] -> memory[86+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[86+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=82 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=84 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[86+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=85 <- addr1=610
==> memory[611] -> memory[86+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=83 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=85 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[86+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[86+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 88
Input queue empty, returning ..
< 150> Painted (x: 9, y: -3) black, turned to  left, and then moved to (x: 8, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=87 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[88+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 86

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=86 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=84 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[86+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=82 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=84 <- addr1=636
==> memory[637] -> memory[86+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 81

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=81 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=82 <- addr1=591
==> memory[592] -> memory[81+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[81+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=77 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=79 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[81+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=80 <- addr1=610
==> memory[611] -> memory[81+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=78 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=80 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[81+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[81+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 83
Input queue empty, returning ..
< 151> Painted (x: 8, y: -3) black, turned to    up, and then moved to (x: 8, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=82 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[83+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 81

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=81 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=79 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[81+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=77 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=79 <- addr1=636
==> memory[637] -> memory[81+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 76

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=76 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=77 <- addr1=591
==> memory[592] -> memory[76+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[76+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=72 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=74 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[76+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=75 <- addr1=610
==> memory[611] -> memory[76+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=73 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=75 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[76+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[76+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 78
Input queue empty, returning ..
< 152> Painted (x: 8, y: -2) black, turned to  left, and then moved to (x: 7, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=77 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[78+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 76

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=76 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=74 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[76+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=72 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=74 <- addr1=636
==> memory[637] -> memory[76+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 71

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=71 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=72 <- addr1=591
==> memory[592] -> memory[71+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[71+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=67 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=69 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[71+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=70 <- addr1=610
==> memory[611] -> memory[71+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=68 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=70 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[71+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[71+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 73
Input queue empty, returning ..
< 153> Painted (x: 7, y: -2) black, turned to  down, and then moved to (x: 7, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=72 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[73+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 71

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=71 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=69 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[71+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=67 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=69 <- addr1=636
==> memory[637] -> memory[71+-4] = 3219

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 66

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=66 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3219 <<-- addr2=67 <- addr1=591
==> memory[592] -> memory[66+-4] = 3219

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[66+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3219 <<-- addr2=62 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=64 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=65 <- addr1=610
==> memory[611] -> memory[66+-2] = 2048

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=63 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=65 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[66+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[66+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 68
Input queue empty, returning ..
< 154> Painted (x: 7, y: -3) black, turned to  left, and then moved to (x: 6, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=67 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[68+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 66

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=66 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[66+-2] = -2048

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3219 <<-- addr2=62 <- addr1=635
inp param 1 (rel) = -2048 <<-- addr2=64 <- addr1=636
==> memory[637] -> memory[66+-4] = 1171

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 61

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=61 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1171 <<-- addr2=62 <- addr1=591
==> memory[592] -> memory[61+-4] = 1171

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[61+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1171 <<-- addr2=57 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=59 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=60 <- addr1=610
==> memory[611] -> memory[61+-2] = 1024

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=58 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=60 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[61+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[61+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 63
Input queue empty, returning ..
< 155> Painted (x: 6, y: -3) white, turned to    up, and then moved to (x: 6, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=62 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[63+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 61

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=61 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[61+-2] = -1024

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1171 <<-- addr2=57 <- addr1=635
inp param 1 (rel) = -1024 <<-- addr2=59 <- addr1=636
==> memory[637] -> memory[61+-4] = 147

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 56

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=56 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 147 <<-- addr2=57 <- addr1=591
==> memory[592] -> memory[56+-4] = 147

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[56+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 147 <<-- addr2=52 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=54 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[56+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=55 <- addr1=610
==> memory[611] -> memory[56+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=53 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=55 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[56+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[56+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 58
Input queue empty, returning ..
< 156> Painted (x: 6, y: -2) white, turned to  left, and then moved to (x: 5, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=57 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[58+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 56

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=56 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=54 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[56+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 147 <<-- addr2=52 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=54 <- addr1=636
==> memory[637] -> memory[56+-4] = 147

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 51

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=51 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 147 <<-- addr2=52 <- addr1=591
==> memory[592] -> memory[51+-4] = 147

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[51+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 147 <<-- addr2=47 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=49 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[51+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=50 <- addr1=610
==> memory[611] -> memory[51+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=48 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=50 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[51+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[51+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 53
Input queue empty, returning ..
< 157> Painted (x: 5, y: -2) black, turned to  down, and then moved to (x: 5, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=52 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[53+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 51

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=51 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=49 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[51+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 147 <<-- addr2=47 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=49 <- addr1=636
==> memory[637] -> memory[51+-4] = 147

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 46

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=46 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 147 <<-- addr2=47 <- addr1=591
==> memory[592] -> memory[46+-4] = 147

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[46+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 147 <<-- addr2=42 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=44 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=45 <- addr1=610
==> memory[611] -> memory[46+-2] = 128

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=43 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=45 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[46+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[46+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 48
Input queue empty, returning ..
< 158> Painted (x: 5, y: -3) black, turned to  left, and then moved to (x: 4, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=47 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[48+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 46

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=46 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[46+-2] = -128

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 147 <<-- addr2=42 <- addr1=635
inp param 1 (rel) = -128 <<-- addr2=44 <- addr1=636
==> memory[637] -> memory[46+-4] = 19

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 41

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=41 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 19 <<-- addr2=42 <- addr1=591
==> memory[592] -> memory[41+-4] = 19

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[41+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=37 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=39 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[41+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=40 <- addr1=610
==> memory[611] -> memory[41+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=38 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=40 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[41+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[41+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 43
Input queue empty, returning ..
< 159> Painted (x: 4, y: -3) white, turned to    up, and then moved to (x: 4, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=42 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[43+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 41

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=41 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=39 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[41+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=37 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=39 <- addr1=636
==> memory[637] -> memory[41+-4] = 19

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 36

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=36 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 19 <<-- addr2=37 <- addr1=591
==> memory[592] -> memory[36+-4] = 19

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[36+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=32 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=34 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[36+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=35 <- addr1=610
==> memory[611] -> memory[36+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=33 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=35 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[36+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[36+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 38
Input queue empty, returning ..
< 160> Painted (x: 4, y: -2) black, turned to  left, and then moved to (x: 3, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=37 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[38+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 36

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=36 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=34 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[36+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=32 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=34 <- addr1=636
==> memory[637] -> memory[36+-4] = 19

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 31

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=31 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 19 <<-- addr2=32 <- addr1=591
==> memory[592] -> memory[31+-4] = 19

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[31+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=27 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=29 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=30 <- addr1=610
==> memory[611] -> memory[31+-2] = 16

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=28 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=30 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[31+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[31+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 33
Input queue empty, returning ..
< 161> Painted (x: 3, y: -2) black, turned to  down, and then moved to (x: 3, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=32 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[33+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 31

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=31 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[31+-2] = -16

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=27 <- addr1=635
inp param 1 (rel) = -16 <<-- addr2=29 <- addr1=636
==> memory[637] -> memory[31+-4] = 3

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 26

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=26 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3 <<-- addr2=27 <- addr1=591
==> memory[592] -> memory[26+-4] = 3

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[26+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=22 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=24 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[26+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=25 <- addr1=610
==> memory[611] -> memory[26+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=23 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=25 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[26+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[26+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 28
Input queue empty, returning ..
< 162> Painted (x: 3, y: -3) white, turned to  left, and then moved to (x: 2, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=27 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[28+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 26

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=26 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=24 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[26+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=22 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=24 <- addr1=636
==> memory[637] -> memory[26+-4] = 3

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 21

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=21 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3 <<-- addr2=22 <- addr1=591
==> memory[592] -> memory[21+-4] = 3

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[21+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=17 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=19 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[21+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=20 <- addr1=610
==> memory[611] -> memory[21+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=18 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=20 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[21+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[21+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 23
Input queue empty, returning ..
< 163> Painted (x: 2, y: -3) black, turned to    up, and then moved to (x: 2, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=22 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[23+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 21

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=21 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=19 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[21+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=17 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=19 <- addr1=636
==> memory[637] -> memory[21+-4] = 3

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 16

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=16 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 3 <<-- addr2=17 <- addr1=591
==> memory[592] -> memory[16+-4] = 3

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[16+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=12 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=14 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=15 <- addr1=610
==> memory[611] -> memory[16+-2] = 2

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=13 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=15 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[16+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[16+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 18
Input queue empty, returning ..
< 164> Painted (x: 2, y: -2) black, turned to  left, and then moved to (x: 1, y: -2)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=17 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[18+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 16

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=16 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[16+-2] = -2

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=12 <- addr1=635
inp param 1 (rel) = -2 <<-- addr2=14 <- addr1=636
==> memory[637] -> memory[16+-4] = 1

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 11

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=11 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 1 <<-- addr2=12 <- addr1=591
==> memory[592] -> memory[11+-4] = 1

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[11+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=7 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=9 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=10 <- addr1=610
==> memory[611] -> memory[11+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=8 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=10 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[11+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[11+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 13
Input queue empty, returning ..
< 165> Painted (x: 1, y: -2) white, turned to  down, and then moved to (x: 1, y: -3)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=12 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[13+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 11

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=11 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=9 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[11+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=7 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=9 <- addr1=636
==> memory[637] -> memory[11+-4] = 1

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 6

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=6 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 2

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=2 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 0

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 407 <<-- addr2=0 <- addr1=467
Input queue empty, returning ..
< 166> Painted (x: 1, y: -3) white, turned to  left, and then moved to (x: 0, y: -3)

[407] 3 => Instruction INP (3)
-> 0
==> memory[408] -> memory[10] = 0

[409] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=410
  OUTPUT[0] .. memory[410] => 0

[411] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=412
  OUTPUT[1] .. memory[412] => 0
Input queue empty, returning ..
< 167> Painted (x: 0, y: -3) black, turned to  down, and then moved to (x: 0, y: -4)

[413] 3 => Instruction INP (3)
-> 0
==> memory[414] -> memory[10] = 0

[415] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=416
  OUTPUT[0] .. memory[416] => 0

[417] 104 => Instruction OUT (4)
inp param 0 (imm) = 0 <<-- addr1=418
  OUTPUT[1] .. memory[418] => 0

[419] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=420
inp param 1 (imm) = 718170641252 <<-- addr1=421
==> memory[422] -> memory[0+1] = 718170641252

[423] 21102 => Instruction MUL (2)
inp param 0 (imm) = 430 <<-- addr1=424
inp param 1 (imm) = 1 <<-- addr1=425
==> memory[426] -> memory[0+0] = 430

[427] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=428
inp param 1 (imm) = 442 <<-- addr1=429

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 2

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 718170641252 <<-- addr2=1 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[2+1] = 718170641252

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[2+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[2+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[2+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 6

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=5 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 718170641252 <<-- addr2=3 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 718170641252 <<-- addr2=3 <- addr1=525
==> memory[526] -> memory[6+1] = 718170641252

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=4 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[6+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[6+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[6+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 11

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=7 <- addr1=572
==> memory[573] -> memory[11+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[11+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[11+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[11+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 16

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=12 <- addr1=572
==> memory[573] -> memory[16+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[16+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[16+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[16+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 21

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=17 <- addr1=572
==> memory[573] -> memory[21+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[21+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[21+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[21+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 26

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=22 <- addr1=572
==> memory[573] -> memory[26+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[26+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[26+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[26+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 31

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=27 <- addr1=572
==> memory[573] -> memory[31+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[31+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[31+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[31+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 36

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=32 <- addr1=572
==> memory[573] -> memory[36+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[36+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[36+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[36+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 41

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=37 <- addr1=572
==> memory[573] -> memory[41+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[41+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[41+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[41+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 46

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=42 <- addr1=572
==> memory[573] -> memory[46+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[46+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[46+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[46+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 51

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=47 <- addr1=572
==> memory[573] -> memory[51+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[51+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[51+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[51+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 56

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=52 <- addr1=572
==> memory[573] -> memory[56+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[56+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[56+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[56+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 61

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=57 <- addr1=572
==> memory[573] -> memory[61+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[61+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[61+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[61+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 66

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=62 <- addr1=572
==> memory[573] -> memory[66+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[66+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[66+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[66+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 71

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=67 <- addr1=572
==> memory[573] -> memory[71+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[71+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[71+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[71+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 76

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=72 <- addr1=572
==> memory[573] -> memory[76+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[76+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[76+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[76+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 81

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=77 <- addr1=572
==> memory[573] -> memory[81+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[81+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[81+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[81+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 86

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=82 <- addr1=572
==> memory[573] -> memory[86+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[86+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[86+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[86+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 91

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=87 <- addr1=572
==> memory[573] -> memory[91+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[91+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[91+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[91+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 96

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=92 <- addr1=572
==> memory[573] -> memory[96+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[96+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[96+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[96+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 101

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=97 <- addr1=572
==> memory[573] -> memory[101+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[101+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[101+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[101+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 106

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=102 <- addr1=572
==> memory[573] -> memory[106+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[106+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[106+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[106+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 111

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=107 <- addr1=572
==> memory[573] -> memory[111+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[111+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[111+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[111+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 116

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=112 <- addr1=572
==> memory[573] -> memory[116+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[116+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[116+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[116+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 121

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=117 <- addr1=572
==> memory[573] -> memory[121+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[121+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[121+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[121+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 126

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=122 <- addr1=572
==> memory[573] -> memory[126+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[126+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[126+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[126+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 131

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=127 <- addr1=572
==> memory[573] -> memory[131+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[131+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[131+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[131+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 136

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=132 <- addr1=572
==> memory[573] -> memory[136+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[136+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[136+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[136+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 141

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=137 <- addr1=572
==> memory[573] -> memory[141+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[141+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[141+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[141+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 146

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=142 <- addr1=572
==> memory[573] -> memory[146+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[146+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[146+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[146+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 151

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=147 <- addr1=572
==> memory[573] -> memory[151+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[151+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[151+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[151+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 156

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=152 <- addr1=572
==> memory[573] -> memory[156+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[156+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[156+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[156+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 161

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=157 <- addr1=572
==> memory[573] -> memory[161+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[161+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[161+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[161+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 166

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=162 <- addr1=572
==> memory[573] -> memory[166+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[166+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[166+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[166+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 171

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=167 <- addr1=572
==> memory[573] -> memory[171+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[171+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[171+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[171+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 176

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=172 <- addr1=572
==> memory[573] -> memory[176+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[176+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[176+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[176+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 181

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=177 <- addr1=572
==> memory[573] -> memory[181+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[181+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[181+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[181+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 186

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=182 <- addr1=572
==> memory[573] -> memory[186+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[186+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[186+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[186+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 191

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=187 <- addr1=572
==> memory[573] -> memory[191+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[191+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[191+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[191+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 196

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=192 <- addr1=572
==> memory[573] -> memory[196+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[196+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[196+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[196+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 201

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=197 <- addr1=572
==> memory[573] -> memory[201+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[201+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[201+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[201+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 206

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 718170641252 <<-- addr2=202 <- addr1=572
==> memory[573] -> memory[206+1] = 718170641252

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[206+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[206+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[206+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 211

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=208 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 718170641252 <<-- addr2=207 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=209 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 718170641252 <<-- addr2=207 <- addr1=565
==> memory[566] -> memory[211+-4] = 718170641252

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 206

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=206 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 718170641252 <<-- addr2=207 <- addr1=591
==> memory[592] -> memory[206+-4] = 718170641252

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[206+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 718170641252 <<-- addr2=202 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=204 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=205 <- addr1=610
==> memory[611] -> memory[206+-2] = 549755813888

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=203 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=205 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[206+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[206+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 208
Input queue empty, returning ..
< 168> Painted (x: 0, y: -4) black, turned to right, and then moved to (x: 1, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=207 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[208+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 206

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=206 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[206+-2] = -549755813888

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 718170641252 <<-- addr2=202 <- addr1=635
inp param 1 (rel) = -549755813888 <<-- addr2=204 <- addr1=636
==> memory[637] -> memory[206+-4] = 168414827364

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 201

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=201 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 168414827364 <<-- addr2=202 <- addr1=591
==> memory[592] -> memory[201+-4] = 168414827364

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[201+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 168414827364 <<-- addr2=197 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=199 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[201+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=200 <- addr1=610
==> memory[611] -> memory[201+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=198 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=200 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[201+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[201+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 203
Input queue empty, returning ..
< 169> Painted (x: 1, y: -4) white, turned to  down, and then moved to (x: 1, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=202 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[203+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 201

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=201 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=199 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[201+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 168414827364 <<-- addr2=197 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=199 <- addr1=636
==> memory[637] -> memory[201+-4] = 168414827364

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 196

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=196 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 168414827364 <<-- addr2=197 <- addr1=591
==> memory[592] -> memory[196+-4] = 168414827364

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[196+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 168414827364 <<-- addr2=192 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=194 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=195 <- addr1=610
==> memory[611] -> memory[196+-2] = 137438953472

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=193 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=195 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[196+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[196+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 198
Input queue empty, returning ..
< 170> Painted (x: 1, y: -5) black, turned to right, and then moved to (x: 2, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=197 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[198+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 196

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=196 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[196+-2] = -137438953472

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 168414827364 <<-- addr2=192 <- addr1=635
inp param 1 (rel) = -137438953472 <<-- addr2=194 <- addr1=636
==> memory[637] -> memory[196+-4] = 30975873892

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 191

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=191 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 30975873892 <<-- addr2=192 <- addr1=591
==> memory[592] -> memory[191+-4] = 30975873892

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[191+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 30975873892 <<-- addr2=187 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=189 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[191+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=190 <- addr1=610
==> memory[611] -> memory[191+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=188 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=190 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[191+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[191+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 193
Input queue empty, returning ..
< 171> Painted (x: 2, y: -5) white, turned to    up, and then moved to (x: 2, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=192 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[193+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 191

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=191 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=189 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[191+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 30975873892 <<-- addr2=187 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=189 <- addr1=636
==> memory[637] -> memory[191+-4] = 30975873892

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 186

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=186 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 30975873892 <<-- addr2=187 <- addr1=591
==> memory[592] -> memory[186+-4] = 30975873892

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[186+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 30975873892 <<-- addr2=182 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=184 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[186+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=185 <- addr1=610
==> memory[611] -> memory[186+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=183 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=185 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[186+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[186+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 188
Input queue empty, returning ..
< 172> Painted (x: 2, y: -4) black, turned to right, and then moved to (x: 3, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=187 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[188+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 186

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=186 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=184 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[186+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 30975873892 <<-- addr2=182 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=184 <- addr1=636
==> memory[637] -> memory[186+-4] = 30975873892

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 181

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=181 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 30975873892 <<-- addr2=182 <- addr1=591
==> memory[592] -> memory[181+-4] = 30975873892

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[181+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 30975873892 <<-- addr2=177 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=179 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=180 <- addr1=610
==> memory[611] -> memory[181+-2] = 17179869184

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=178 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=180 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[181+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[181+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 183
Input queue empty, returning ..
< 173> Painted (x: 3, y: -4) black, turned to  down, and then moved to (x: 3, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=182 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[183+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 181

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=181 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[181+-2] = -17179869184

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 30975873892 <<-- addr2=177 <- addr1=635
inp param 1 (rel) = -17179869184 <<-- addr2=179 <- addr1=636
==> memory[637] -> memory[181+-4] = 13796004708

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 176

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=176 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 13796004708 <<-- addr2=177 <- addr1=591
==> memory[592] -> memory[176+-4] = 13796004708

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[176+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 13796004708 <<-- addr2=172 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=174 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=175 <- addr1=610
==> memory[611] -> memory[176+-2] = 8589934592

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=173 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=175 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[176+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[176+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 178
Input queue empty, returning ..
< 174> Painted (x: 3, y: -5) white, turned to right, and then moved to (x: 4, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=177 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[178+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 176

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=176 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[176+-2] = -8589934592

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 13796004708 <<-- addr2=172 <- addr1=635
inp param 1 (rel) = -8589934592 <<-- addr2=174 <- addr1=636
==> memory[637] -> memory[176+-4] = 5206070116

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 171

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=171 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 5206070116 <<-- addr2=172 <- addr1=591
==> memory[592] -> memory[171+-4] = 5206070116

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[171+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 5206070116 <<-- addr2=167 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=169 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=170 <- addr1=610
==> memory[611] -> memory[171+-2] = 4294967296

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=168 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=170 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[171+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[171+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 173
Input queue empty, returning ..
< 175> Painted (x: 4, y: -5) white, turned to    up, and then moved to (x: 4, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=172 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[173+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 171

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=171 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[171+-2] = -4294967296

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 5206070116 <<-- addr2=167 <- addr1=635
inp param 1 (rel) = -4294967296 <<-- addr2=169 <- addr1=636
==> memory[637] -> memory[171+-4] = 911102820

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 166

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=166 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 911102820 <<-- addr2=167 <- addr1=591
==> memory[592] -> memory[166+-4] = 911102820

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[166+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 911102820 <<-- addr2=162 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=164 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[166+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=165 <- addr1=610
==> memory[611] -> memory[166+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=163 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=165 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[166+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[166+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 168
Input queue empty, returning ..
< 176> Painted (x: 4, y: -4) white, turned to right, and then moved to (x: 5, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=167 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[168+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 166

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=166 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=164 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[166+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 911102820 <<-- addr2=162 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=164 <- addr1=636
==> memory[637] -> memory[166+-4] = 911102820

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 161

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=161 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 911102820 <<-- addr2=162 <- addr1=591
==> memory[592] -> memory[161+-4] = 911102820

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[161+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 911102820 <<-- addr2=157 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=159 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[161+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=160 <- addr1=610
==> memory[611] -> memory[161+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=158 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=160 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[161+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[161+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 163
Input queue empty, returning ..
< 177> Painted (x: 5, y: -4) black, turned to  down, and then moved to (x: 5, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=162 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[163+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 161

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=161 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=159 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[161+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 911102820 <<-- addr2=157 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=159 <- addr1=636
==> memory[637] -> memory[161+-4] = 911102820

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 156

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=156 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 911102820 <<-- addr2=157 <- addr1=591
==> memory[592] -> memory[156+-4] = 911102820

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[156+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 911102820 <<-- addr2=152 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=154 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=155 <- addr1=610
==> memory[611] -> memory[156+-2] = 536870912

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=153 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=155 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[156+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[156+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 158
Input queue empty, returning ..
< 178> Painted (x: 5, y: -5) black, turned to right, and then moved to (x: 6, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=157 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[158+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 156

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=156 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[156+-2] = -536870912

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 911102820 <<-- addr2=152 <- addr1=635
inp param 1 (rel) = -536870912 <<-- addr2=154 <- addr1=636
==> memory[637] -> memory[156+-4] = 374231908

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 151

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=151 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 374231908 <<-- addr2=152 <- addr1=591
==> memory[592] -> memory[151+-4] = 374231908

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[151+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 374231908 <<-- addr2=147 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=149 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=150 <- addr1=610
==> memory[611] -> memory[151+-2] = 268435456

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=148 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=150 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[151+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[151+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 153
Input queue empty, returning ..
< 179> Painted (x: 6, y: -5) white, turned to    up, and then moved to (x: 6, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=152 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[153+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 151

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=151 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[151+-2] = -268435456

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 374231908 <<-- addr2=147 <- addr1=635
inp param 1 (rel) = -268435456 <<-- addr2=149 <- addr1=636
==> memory[637] -> memory[151+-4] = 105796452

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 146

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=146 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 105796452 <<-- addr2=147 <- addr1=591
==> memory[592] -> memory[146+-4] = 105796452

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[146+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 105796452 <<-- addr2=142 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=144 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[146+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=145 <- addr1=610
==> memory[611] -> memory[146+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=143 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=145 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[146+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[146+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 148
Input queue empty, returning ..
< 180> Painted (x: 6, y: -4) white, turned to right, and then moved to (x: 7, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=147 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[148+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 146

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=146 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=144 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[146+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 105796452 <<-- addr2=142 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=144 <- addr1=636
==> memory[637] -> memory[146+-4] = 105796452

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 141

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=141 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 105796452 <<-- addr2=142 <- addr1=591
==> memory[592] -> memory[141+-4] = 105796452

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[141+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 105796452 <<-- addr2=137 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=139 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=140 <- addr1=610
==> memory[611] -> memory[141+-2] = 67108864

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=138 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=140 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[141+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[141+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 143
Input queue empty, returning ..
< 181> Painted (x: 7, y: -4) black, turned to  down, and then moved to (x: 7, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=142 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[143+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 141

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=141 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[141+-2] = -67108864

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 105796452 <<-- addr2=137 <- addr1=635
inp param 1 (rel) = -67108864 <<-- addr2=139 <- addr1=636
==> memory[637] -> memory[141+-4] = 38687588

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 136

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=136 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 38687588 <<-- addr2=137 <- addr1=591
==> memory[592] -> memory[136+-4] = 38687588

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[136+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 38687588 <<-- addr2=132 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=134 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=135 <- addr1=610
==> memory[611] -> memory[136+-2] = 33554432

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=133 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=135 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[136+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[136+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 138
Input queue empty, returning ..
< 182> Painted (x: 7, y: -5) white, turned to right, and then moved to (x: 8, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=137 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[138+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 136

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=136 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[136+-2] = -33554432

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 38687588 <<-- addr2=132 <- addr1=635
inp param 1 (rel) = -33554432 <<-- addr2=134 <- addr1=636
==> memory[637] -> memory[136+-4] = 5133156

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 131

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=131 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 5133156 <<-- addr2=132 <- addr1=591
==> memory[592] -> memory[131+-4] = 5133156

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[131+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 5133156 <<-- addr2=127 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=129 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[131+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=130 <- addr1=610
==> memory[611] -> memory[131+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=128 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=130 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[131+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[131+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 133
Input queue empty, returning ..
< 183> Painted (x: 8, y: -5) white, turned to    up, and then moved to (x: 8, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=132 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[133+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 131

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=131 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=129 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[131+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 5133156 <<-- addr2=127 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=129 <- addr1=636
==> memory[637] -> memory[131+-4] = 5133156

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 126

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=126 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 5133156 <<-- addr2=127 <- addr1=591
==> memory[592] -> memory[126+-4] = 5133156

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[126+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 5133156 <<-- addr2=122 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=124 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[126+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=125 <- addr1=610
==> memory[611] -> memory[126+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=123 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=125 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[126+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[126+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 128
Input queue empty, returning ..
< 184> Painted (x: 8, y: -4) black, turned to right, and then moved to (x: 9, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=127 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[128+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 126

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=126 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=124 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[126+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 5133156 <<-- addr2=122 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=124 <- addr1=636
==> memory[637] -> memory[126+-4] = 5133156

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 121

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=121 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 5133156 <<-- addr2=122 <- addr1=591
==> memory[592] -> memory[121+-4] = 5133156

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[121+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 5133156 <<-- addr2=117 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=119 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=120 <- addr1=610
==> memory[611] -> memory[121+-2] = 4194304

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=118 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=120 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[121+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[121+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 123
Input queue empty, returning ..
< 185> Painted (x: 9, y: -4) black, turned to  down, and then moved to (x: 9, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=122 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[123+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 121

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=121 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[121+-2] = -4194304

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 5133156 <<-- addr2=117 <- addr1=635
inp param 1 (rel) = -4194304 <<-- addr2=119 <- addr1=636
==> memory[637] -> memory[121+-4] = 938852

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 116

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=116 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 938852 <<-- addr2=117 <- addr1=591
==> memory[592] -> memory[116+-4] = 938852

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[116+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 938852 <<-- addr2=112 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=114 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[116+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=115 <- addr1=610
==> memory[611] -> memory[116+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=113 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=115 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[116+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[116+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 118
Input queue empty, returning ..
< 186> Painted (x: 9, y: -5) white, turned to right, and then moved to (x: 10, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=117 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[118+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 116

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=116 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=114 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[116+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 938852 <<-- addr2=112 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=114 <- addr1=636
==> memory[637] -> memory[116+-4] = 938852

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 111

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=111 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 938852 <<-- addr2=112 <- addr1=591
==> memory[592] -> memory[111+-4] = 938852

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[111+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 938852 <<-- addr2=107 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=109 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[111+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=110 <- addr1=610
==> memory[611] -> memory[111+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=108 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=110 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[111+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[111+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 113
Input queue empty, returning ..
< 187> Painted (x: 10, y: -5) black, turned to    up, and then moved to (x: 10, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=112 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[113+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 111

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=111 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=109 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[111+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 938852 <<-- addr2=107 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=109 <- addr1=636
==> memory[637] -> memory[111+-4] = 938852

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 106

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=106 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 938852 <<-- addr2=107 <- addr1=591
==> memory[592] -> memory[106+-4] = 938852

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[106+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 938852 <<-- addr2=102 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=104 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=105 <- addr1=610
==> memory[611] -> memory[106+-2] = 524288

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=103 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=105 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[106+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[106+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 108
Input queue empty, returning ..
< 188> Painted (x: 10, y: -4) black, turned to right, and then moved to (x: 11, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=107 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[108+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 106

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=106 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[106+-2] = -524288

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 938852 <<-- addr2=102 <- addr1=635
inp param 1 (rel) = -524288 <<-- addr2=104 <- addr1=636
==> memory[637] -> memory[106+-4] = 414564

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 101

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=101 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 414564 <<-- addr2=102 <- addr1=591
==> memory[592] -> memory[101+-4] = 414564

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[101+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 414564 <<-- addr2=97 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=99 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=100 <- addr1=610
==> memory[611] -> memory[101+-2] = 262144

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=98 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=100 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[101+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[101+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 103
Input queue empty, returning ..
< 189> Painted (x: 11, y: -4) white, turned to  down, and then moved to (x: 11, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=102 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[103+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 101

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=101 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[101+-2] = -262144

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 414564 <<-- addr2=97 <- addr1=635
inp param 1 (rel) = -262144 <<-- addr2=99 <- addr1=636
==> memory[637] -> memory[101+-4] = 152420

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 96

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=96 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 152420 <<-- addr2=97 <- addr1=591
==> memory[592] -> memory[96+-4] = 152420

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[96+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 152420 <<-- addr2=92 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=94 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=95 <- addr1=610
==> memory[611] -> memory[96+-2] = 131072

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=93 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=95 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[96+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[96+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 98
Input queue empty, returning ..
< 190> Painted (x: 11, y: -5) white, turned to right, and then moved to (x: 12, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=97 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[98+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 96

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=96 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[96+-2] = -131072

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 152420 <<-- addr2=92 <- addr1=635
inp param 1 (rel) = -131072 <<-- addr2=94 <- addr1=636
==> memory[637] -> memory[96+-4] = 21348

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 91

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=91 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 21348 <<-- addr2=92 <- addr1=591
==> memory[592] -> memory[91+-4] = 21348

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[91+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 21348 <<-- addr2=87 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=89 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[91+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=90 <- addr1=610
==> memory[611] -> memory[91+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=88 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=90 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[91+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[91+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 93
Input queue empty, returning ..
< 191> Painted (x: 12, y: -5) white, turned to    up, and then moved to (x: 12, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=92 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[93+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 91

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=91 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=89 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[91+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 21348 <<-- addr2=87 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=89 <- addr1=636
==> memory[637] -> memory[91+-4] = 21348

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 86

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=86 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 21348 <<-- addr2=87 <- addr1=591
==> memory[592] -> memory[86+-4] = 21348

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[86+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 21348 <<-- addr2=82 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=84 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[86+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=85 <- addr1=610
==> memory[611] -> memory[86+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=83 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=85 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[86+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[86+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 88
Input queue empty, returning ..
< 192> Painted (x: 12, y: -4) black, turned to right, and then moved to (x: 13, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=87 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[88+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 86

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=86 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=84 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[86+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 21348 <<-- addr2=82 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=84 <- addr1=636
==> memory[637] -> memory[86+-4] = 21348

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 81

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=81 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 21348 <<-- addr2=82 <- addr1=591
==> memory[592] -> memory[81+-4] = 21348

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[81+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 21348 <<-- addr2=77 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=79 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=80 <- addr1=610
==> memory[611] -> memory[81+-2] = 16384

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=78 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=80 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[81+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[81+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 83
Input queue empty, returning ..
< 193> Painted (x: 13, y: -4) black, turned to  down, and then moved to (x: 13, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=82 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[83+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 81

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=81 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[81+-2] = -16384

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 21348 <<-- addr2=77 <- addr1=635
inp param 1 (rel) = -16384 <<-- addr2=79 <- addr1=636
==> memory[637] -> memory[81+-4] = 4964

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 76

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=76 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4964 <<-- addr2=77 <- addr1=591
==> memory[592] -> memory[76+-4] = 4964

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[76+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4964 <<-- addr2=72 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=74 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[76+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=75 <- addr1=610
==> memory[611] -> memory[76+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=73 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=75 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[76+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[76+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 78
Input queue empty, returning ..
< 194> Painted (x: 13, y: -5) white, turned to right, and then moved to (x: 14, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=77 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[78+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 76

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=76 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=74 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[76+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4964 <<-- addr2=72 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=74 <- addr1=636
==> memory[637] -> memory[76+-4] = 4964

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 71

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=71 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4964 <<-- addr2=72 <- addr1=591
==> memory[592] -> memory[71+-4] = 4964

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[71+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4964 <<-- addr2=67 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=69 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=70 <- addr1=610
==> memory[611] -> memory[71+-2] = 4096

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=68 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=70 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[71+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[71+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 73
Input queue empty, returning ..
< 195> Painted (x: 14, y: -5) black, turned to    up, and then moved to (x: 14, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=72 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[73+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 71

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=71 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[71+-2] = -4096

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4964 <<-- addr2=67 <- addr1=635
inp param 1 (rel) = -4096 <<-- addr2=69 <- addr1=636
==> memory[637] -> memory[71+-4] = 868

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 66

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=66 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 868 <<-- addr2=67 <- addr1=591
==> memory[592] -> memory[66+-4] = 868

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[66+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 868 <<-- addr2=62 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=64 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[66+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=65 <- addr1=610
==> memory[611] -> memory[66+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=63 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=65 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[66+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[66+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 68
Input queue empty, returning ..
< 196> Painted (x: 14, y: -4) white, turned to right, and then moved to (x: 15, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=67 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[68+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 66

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=66 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=64 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[66+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 868 <<-- addr2=62 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=64 <- addr1=636
==> memory[637] -> memory[66+-4] = 868

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 61

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=61 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 868 <<-- addr2=62 <- addr1=591
==> memory[592] -> memory[61+-4] = 868

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[61+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 868 <<-- addr2=57 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=59 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[61+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=60 <- addr1=610
==> memory[611] -> memory[61+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=58 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=60 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[61+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[61+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 63
Input queue empty, returning ..
< 197> Painted (x: 15, y: -4) black, turned to  down, and then moved to (x: 15, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=62 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[63+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 61

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=61 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=59 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[61+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 868 <<-- addr2=57 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=59 <- addr1=636
==> memory[637] -> memory[61+-4] = 868

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 56

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=56 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 868 <<-- addr2=57 <- addr1=591
==> memory[592] -> memory[56+-4] = 868

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[56+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 868 <<-- addr2=52 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=54 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=55 <- addr1=610
==> memory[611] -> memory[56+-2] = 512

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=53 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=55 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[56+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[56+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 58
Input queue empty, returning ..
< 198> Painted (x: 15, y: -5) black, turned to right, and then moved to (x: 16, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=57 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[58+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 56

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=56 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[56+-2] = -512

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 868 <<-- addr2=52 <- addr1=635
inp param 1 (rel) = -512 <<-- addr2=54 <- addr1=636
==> memory[637] -> memory[56+-4] = 356

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 51

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=51 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 356 <<-- addr2=52 <- addr1=591
==> memory[592] -> memory[51+-4] = 356

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[51+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 356 <<-- addr2=47 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=49 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=50 <- addr1=610
==> memory[611] -> memory[51+-2] = 256

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=48 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=50 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[51+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[51+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 53
Input queue empty, returning ..
< 199> Painted (x: 16, y: -5) white, turned to    up, and then moved to (x: 16, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=52 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[53+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 51

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=51 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[51+-2] = -256

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 356 <<-- addr2=47 <- addr1=635
inp param 1 (rel) = -256 <<-- addr2=49 <- addr1=636
==> memory[637] -> memory[51+-4] = 100

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 46

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=46 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 100 <<-- addr2=47 <- addr1=591
==> memory[592] -> memory[46+-4] = 100

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[46+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 100 <<-- addr2=42 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=44 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[46+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=45 <- addr1=610
==> memory[611] -> memory[46+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=43 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=45 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[46+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[46+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 48
Input queue empty, returning ..
< 200> Painted (x: 16, y: -4) white, turned to right, and then moved to (x: 17, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=47 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[48+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 46

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=46 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=44 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[46+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 100 <<-- addr2=42 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=44 <- addr1=636
==> memory[637] -> memory[46+-4] = 100

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 41

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=41 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 100 <<-- addr2=42 <- addr1=591
==> memory[592] -> memory[41+-4] = 100

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[41+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 100 <<-- addr2=37 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=39 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=40 <- addr1=610
==> memory[611] -> memory[41+-2] = 64

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=38 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=40 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[41+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[41+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 43
Input queue empty, returning ..
< 201> Painted (x: 17, y: -4) black, turned to  down, and then moved to (x: 17, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=42 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[43+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 41

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=41 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[41+-2] = -64

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 100 <<-- addr2=37 <- addr1=635
inp param 1 (rel) = -64 <<-- addr2=39 <- addr1=636
==> memory[637] -> memory[41+-4] = 36

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 36

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=36 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 36 <<-- addr2=37 <- addr1=591
==> memory[592] -> memory[36+-4] = 36

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[36+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=32 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=34 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=35 <- addr1=610
==> memory[611] -> memory[36+-2] = 32

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=33 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=35 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[36+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[36+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 38
Input queue empty, returning ..
< 202> Painted (x: 17, y: -5) white, turned to right, and then moved to (x: 18, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=37 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[38+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 36

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=36 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[36+-2] = -32

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=32 <- addr1=635
inp param 1 (rel) = -32 <<-- addr2=34 <- addr1=636
==> memory[637] -> memory[36+-4] = 4

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 31

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=31 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4 <<-- addr2=32 <- addr1=591
==> memory[592] -> memory[31+-4] = 4

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[31+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=27 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=29 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[31+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=30 <- addr1=610
==> memory[611] -> memory[31+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=28 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=30 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[31+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[31+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 33
Input queue empty, returning ..
< 203> Painted (x: 18, y: -5) white, turned to    up, and then moved to (x: 18, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=32 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[33+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 31

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=31 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=29 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[31+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=27 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=29 <- addr1=636
==> memory[637] -> memory[31+-4] = 4

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 26

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=26 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4 <<-- addr2=27 <- addr1=591
==> memory[592] -> memory[26+-4] = 4

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[26+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=22 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=24 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[26+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=25 <- addr1=610
==> memory[611] -> memory[26+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=23 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=25 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[26+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[26+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 28
Input queue empty, returning ..
< 204> Painted (x: 18, y: -4) black, turned to right, and then moved to (x: 19, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=27 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[28+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 26

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=26 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=24 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[26+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=22 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=24 <- addr1=636
==> memory[637] -> memory[26+-4] = 4

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 21

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=21 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 4 <<-- addr2=22 <- addr1=591
==> memory[592] -> memory[21+-4] = 4

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[21+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=17 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=19 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=20 <- addr1=610
==> memory[611] -> memory[21+-2] = 4

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=18 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=20 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[21+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[21+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 23
Input queue empty, returning ..
< 205> Painted (x: 19, y: -4) black, turned to  down, and then moved to (x: 19, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=22 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[23+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 21

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=21 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[21+-2] = -4

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=17 <- addr1=635
inp param 1 (rel) = -4 <<-- addr2=19 <- addr1=636
==> memory[637] -> memory[21+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 16

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=16 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=17 <- addr1=591
==> memory[592] -> memory[16+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[16+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=12 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=14 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[16+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=15 <- addr1=610
==> memory[611] -> memory[16+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=13 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=15 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[16+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[16+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 18
Input queue empty, returning ..
< 206> Painted (x: 19, y: -5) white, turned to right, and then moved to (x: 20, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=17 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[18+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 16

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=16 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=14 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[16+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=12 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=14 <- addr1=636
==> memory[637] -> memory[16+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 11

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=11 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=12 <- addr1=591
==> memory[592] -> memory[11+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[11+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=7 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=9 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[11+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=10 <- addr1=610
==> memory[611] -> memory[11+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=8 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=10 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[11+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[11+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 13
Input queue empty, returning ..
< 207> Painted (x: 20, y: -5) black, turned to    up, and then moved to (x: 20, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=12 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[13+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 11

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=11 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=9 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[11+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=7 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=9 <- addr1=636
==> memory[637] -> memory[11+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 6

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=6 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 2

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=2 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 0

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 430 <<-- addr2=0 <- addr1=467

[430] 21101 => Instruction ADD (1)
inp param 0 (imm) = 825012151040 <<-- addr1=431
inp param 1 (imm) = 0 <<-- addr1=432
==> memory[433] -> memory[0+1] = 825012151040

[434] 21102 => Instruction MUL (2)
inp param 0 (imm) = 441 <<-- addr1=435
inp param 1 (imm) = 1 <<-- addr1=436
==> memory[437] -> memory[0+0] = 441

[438] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=439
inp param 1 (imm) = 442 <<-- addr1=440

[442] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=443
  new relative base = 2

[444] 21202 => Instruction MUL (2)
inp param 0 (rel) = 825012151040 <<-- addr2=1 <- addr1=445
inp param 1 (imm) = 1 <<-- addr1=446
==> memory[447] -> memory[2+1] = 825012151040

[448] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=449
inp param 1 (imm) = 40 <<-- addr1=450
==> memory[451] -> memory[2+2] = 40

[452] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=453
inp param 1 (imm) = 473 <<-- addr1=454
==> memory[455] -> memory[2+3] = 473

[456] 21102 => Instruction MUL (2)
inp param 0 (imm) = 463 <<-- addr1=457
inp param 1 (imm) = 1 <<-- addr1=458
==> memory[459] -> memory[2+0] = 463

[460] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=461
inp param 1 (imm) = 506 <<-- addr1=462

[506] 109 => Instruction URB (9)
inp param 0 (imm) = 4 <<-- addr1=507
  new relative base = 6

[508] 1202 => Instruction MUL (2)
inp param 0 (rel) = 473 <<-- addr2=5 <- addr1=509
inp param 1 (imm) = 1 <<-- addr1=510
==> memory[511] -> memory[505] = 473

[512] 1207 => Instruction LT (7)
inp param 0 (rel) = 825012151040 <<-- addr2=3 <- addr1=513
inp param 1 (imm) = 0 <<-- addr1=514
==> memory[515] -> memory[10] = 0

[516] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=517
inp param 1 (imm) = 523 <<-- addr1=518

[523] 22101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=524
inp param 1 (rel) = 825012151040 <<-- addr2=3 <- addr1=525
==> memory[526] -> memory[6+1] = 825012151040

[527] 21202 => Instruction MUL (2)
inp param 0 (rel) = 40 <<-- addr2=4 <- addr1=528
inp param 1 (imm) = 1 <<-- addr1=529
==> memory[530] -> memory[6+2] = 40

[531] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=532
inp param 1 (imm) = 1 <<-- addr1=533
==> memory[534] -> memory[6+3] = 1

[535] 21102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=536
inp param 1 (imm) = 542 <<-- addr1=537
==> memory[538] -> memory[6+0] = 542

[539] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=540
inp param 1 (imm) = 547 <<-- addr1=541

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 11

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=7 <- addr1=572
==> memory[573] -> memory[11+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 40 <<-- addr2=8 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[11+2] = 39

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[11+3] = 2

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[11+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 16

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=12 <- addr1=572
==> memory[573] -> memory[16+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 39 <<-- addr2=13 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[16+2] = 38

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[16+3] = 4

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[16+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 21

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=17 <- addr1=572
==> memory[573] -> memory[21+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 38 <<-- addr2=18 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[21+2] = 37

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[21+3] = 8

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[21+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 26

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=22 <- addr1=572
==> memory[573] -> memory[26+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 37 <<-- addr2=23 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[26+2] = 36

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[26+3] = 16

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[26+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 31

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=27 <- addr1=572
==> memory[573] -> memory[31+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 36 <<-- addr2=28 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[31+2] = 35

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[31+3] = 32

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[31+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 36

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=32 <- addr1=572
==> memory[573] -> memory[36+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 35 <<-- addr2=33 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[36+2] = 34

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[36+3] = 64

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[36+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 41

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=37 <- addr1=572
==> memory[573] -> memory[41+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 34 <<-- addr2=38 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[41+2] = 33

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[41+3] = 128

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[41+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 46

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=42 <- addr1=572
==> memory[573] -> memory[46+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 33 <<-- addr2=43 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[46+2] = 32

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[46+3] = 256

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[46+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 51

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=47 <- addr1=572
==> memory[573] -> memory[51+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 32 <<-- addr2=48 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[51+2] = 31

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[51+3] = 512

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[51+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 56

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=52 <- addr1=572
==> memory[573] -> memory[56+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 31 <<-- addr2=53 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[56+2] = 30

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[56+3] = 1024

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[56+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 61

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=57 <- addr1=572
==> memory[573] -> memory[61+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 30 <<-- addr2=58 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[61+2] = 29

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[61+3] = 2048

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[61+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 66

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=62 <- addr1=572
==> memory[573] -> memory[66+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 29 <<-- addr2=63 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[66+2] = 28

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[66+3] = 4096

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[66+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 71

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=67 <- addr1=572
==> memory[573] -> memory[71+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 28 <<-- addr2=68 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[71+2] = 27

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[71+3] = 8192

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[71+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 76

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=72 <- addr1=572
==> memory[573] -> memory[76+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 27 <<-- addr2=73 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[76+2] = 26

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[76+3] = 16384

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[76+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 81

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=77 <- addr1=572
==> memory[573] -> memory[81+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 26 <<-- addr2=78 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[81+2] = 25

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[81+3] = 32768

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[81+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 86

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=82 <- addr1=572
==> memory[573] -> memory[86+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 25 <<-- addr2=83 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[86+2] = 24

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[86+3] = 65536

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[86+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 91

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=87 <- addr1=572
==> memory[573] -> memory[91+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 24 <<-- addr2=88 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[91+2] = 23

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[91+3] = 131072

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[91+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 96

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=92 <- addr1=572
==> memory[573] -> memory[96+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 23 <<-- addr2=93 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[96+2] = 22

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[96+3] = 262144

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[96+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 101

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=97 <- addr1=572
==> memory[573] -> memory[101+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 22 <<-- addr2=98 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[101+2] = 21

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[101+3] = 524288

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[101+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 106

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=102 <- addr1=572
==> memory[573] -> memory[106+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 21 <<-- addr2=103 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[106+2] = 20

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[106+3] = 1048576

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[106+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 111

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=107 <- addr1=572
==> memory[573] -> memory[111+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 20 <<-- addr2=108 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[111+2] = 19

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[111+3] = 2097152

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[111+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 116

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=112 <- addr1=572
==> memory[573] -> memory[116+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 19 <<-- addr2=113 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[116+2] = 18

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[116+3] = 4194304

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[116+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 121

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=117 <- addr1=572
==> memory[573] -> memory[121+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 18 <<-- addr2=118 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[121+2] = 17

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[121+3] = 8388608

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[121+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 126

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=122 <- addr1=572
==> memory[573] -> memory[126+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 17 <<-- addr2=123 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[126+2] = 16

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[126+3] = 16777216

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[126+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 131

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=127 <- addr1=572
==> memory[573] -> memory[131+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 16 <<-- addr2=128 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[131+2] = 15

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[131+3] = 33554432

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[131+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 136

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=132 <- addr1=572
==> memory[573] -> memory[136+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 15 <<-- addr2=133 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[136+2] = 14

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[136+3] = 67108864

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[136+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 141

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=137 <- addr1=572
==> memory[573] -> memory[141+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 14 <<-- addr2=138 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[141+2] = 13

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[141+3] = 134217728

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[141+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 146

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=142 <- addr1=572
==> memory[573] -> memory[146+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 13 <<-- addr2=143 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[146+2] = 12

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[146+3] = 268435456

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[146+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 151

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=147 <- addr1=572
==> memory[573] -> memory[151+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 12 <<-- addr2=148 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[151+2] = 11

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[151+3] = 536870912

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[151+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 156

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=152 <- addr1=572
==> memory[573] -> memory[156+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 11 <<-- addr2=153 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[156+2] = 10

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[156+3] = 1073741824

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[156+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 161

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=157 <- addr1=572
==> memory[573] -> memory[161+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 10 <<-- addr2=158 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[161+2] = 9

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[161+3] = 2147483648

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[161+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 166

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=162 <- addr1=572
==> memory[573] -> memory[166+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 9 <<-- addr2=163 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[166+2] = 8

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[166+3] = 4294967296

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[166+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 171

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=167 <- addr1=572
==> memory[573] -> memory[171+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 8 <<-- addr2=168 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[171+2] = 7

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[171+3] = 8589934592

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[171+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 176

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=172 <- addr1=572
==> memory[573] -> memory[176+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 7 <<-- addr2=173 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[176+2] = 6

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[176+3] = 17179869184

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[176+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 181

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=177 <- addr1=572
==> memory[573] -> memory[181+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 6 <<-- addr2=178 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[181+2] = 5

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[181+3] = 34359738368

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[181+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 186

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=182 <- addr1=572
==> memory[573] -> memory[186+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 5 <<-- addr2=183 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[186+2] = 4

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[186+3] = 68719476736

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[186+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 191

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=187 <- addr1=572
==> memory[573] -> memory[191+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 4 <<-- addr2=188 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[191+2] = 3

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[191+3] = 137438953472

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[191+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 196

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=192 <- addr1=572
==> memory[573] -> memory[196+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 3 <<-- addr2=193 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[196+2] = 2

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[196+3] = 274877906944

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[196+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 201

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=197 <- addr1=572
==> memory[573] -> memory[201+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 2 <<-- addr2=198 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[201+2] = 1

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[201+3] = 549755813888

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[201+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 206

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 0

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[570] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=571
inp param 1 (rel) = 825012151040 <<-- addr2=202 <- addr1=572
==> memory[573] -> memory[206+1] = 825012151040

[574] 21201 => Instruction ADD (1)
inp param 0 (rel) = 1 <<-- addr2=203 <- addr1=575
inp param 1 (imm) = -1 <<-- addr1=576
==> memory[577] -> memory[206+2] = 0

[578] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=579
inp param 1 (imm) = 2 <<-- addr1=580
==> memory[581] -> memory[206+3] = 1099511627776

[582] 21101 => Instruction ADD (1)
inp param 0 (imm) = 0 <<-- addr1=583
inp param 1 (imm) = 589 <<-- addr1=584
==> memory[585] -> memory[206+0] = 589

[586] 1106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=587
inp param 1 (imm) = 547 <<-- addr1=588

[547] 109 => Instruction URB (9)
inp param 0 (imm) = 5 <<-- addr1=548
  new relative base = 211

[549] 1207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=208 <- addr1=550
inp param 1 (imm) = 1 <<-- addr1=551
==> memory[552] -> memory[10] = 1

[553] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=554
inp param 1 (imm) = 570 <<-- addr1=555

[556] 2207 => Instruction LT (7)
inp param 0 (rel) = 825012151040 <<-- addr2=207 <- addr1=557
inp param 1 (rel) = 1099511627776 <<-- addr2=209 <- addr1=558
==> memory[559] -> memory[10] = 1

[560] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=561
inp param 1 (imm) = 570 <<-- addr1=562

[563] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=564
inp param 1 (rel) = 825012151040 <<-- addr2=207 <- addr1=565
==> memory[566] -> memory[211+-4] = 825012151040

[567] 1105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=568
inp param 1 (imm) = 638 <<-- addr1=569

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 206

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=206 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 825012151040 <<-- addr2=207 <- addr1=591
==> memory[592] -> memory[206+-4] = 825012151040

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[206+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 825012151040 <<-- addr2=202 <- addr1=598
inp param 1 (rel) = 549755813888 <<-- addr2=204 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=205 <- addr1=610
==> memory[611] -> memory[206+-2] = 549755813888

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 1 <<-- addr2=203 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=205 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[206+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[206+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 208
Input queue empty, returning ..
< 208> Painted (x: 20, y: -4) white, turned to right, and then moved to (x: 21, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=207 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[208+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 206

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=206 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 549755813888 <<-- addr2=204 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[206+-2] = -549755813888

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 825012151040 <<-- addr2=202 <- addr1=635
inp param 1 (rel) = -549755813888 <<-- addr2=204 <- addr1=636
==> memory[637] -> memory[206+-4] = 275256337152

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 201

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=201 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 275256337152 <<-- addr2=202 <- addr1=591
==> memory[592] -> memory[201+-4] = 275256337152

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[201+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 275256337152 <<-- addr2=197 <- addr1=598
inp param 1 (rel) = 274877906944 <<-- addr2=199 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=200 <- addr1=610
==> memory[611] -> memory[201+-2] = 274877906944

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 2 <<-- addr2=198 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=200 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[201+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[201+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 203
Input queue empty, returning ..
< 209> Painted (x: 21, y: -4) white, turned to  down, and then moved to (x: 21, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=202 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[203+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 201

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=201 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 274877906944 <<-- addr2=199 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[201+-2] = -274877906944

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 275256337152 <<-- addr2=197 <- addr1=635
inp param 1 (rel) = -274877906944 <<-- addr2=199 <- addr1=636
==> memory[637] -> memory[201+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 196

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=196 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=197 <- addr1=591
==> memory[592] -> memory[196+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[196+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=192 <- addr1=598
inp param 1 (rel) = 137438953472 <<-- addr2=194 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[196+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 137438953472 <<-- addr2=194 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=195 <- addr1=610
==> memory[611] -> memory[196+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 3 <<-- addr2=193 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=195 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[196+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[196+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 198
Input queue empty, returning ..
< 210> Painted (x: 21, y: -5) white, turned to right, and then moved to (x: 22, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=197 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[198+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 196

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=196 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=194 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[196+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=192 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=194 <- addr1=636
==> memory[637] -> memory[196+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 191

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=191 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=192 <- addr1=591
==> memory[592] -> memory[191+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[191+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=187 <- addr1=598
inp param 1 (rel) = 68719476736 <<-- addr2=189 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[191+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 68719476736 <<-- addr2=189 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=190 <- addr1=610
==> memory[611] -> memory[191+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 4 <<-- addr2=188 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=190 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[191+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[191+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 193
Input queue empty, returning ..
< 211> Painted (x: 22, y: -5) black, turned to    up, and then moved to (x: 22, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=192 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[193+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 191

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=191 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=189 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[191+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=187 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=189 <- addr1=636
==> memory[637] -> memory[191+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 186

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=186 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=187 <- addr1=591
==> memory[592] -> memory[186+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[186+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=182 <- addr1=598
inp param 1 (rel) = 34359738368 <<-- addr2=184 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[186+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 34359738368 <<-- addr2=184 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=185 <- addr1=610
==> memory[611] -> memory[186+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 5 <<-- addr2=183 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=185 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[186+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[186+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 188
Input queue empty, returning ..
< 212> Painted (x: 22, y: -4) black, turned to right, and then moved to (x: 23, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=187 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[188+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 186

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=186 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=184 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[186+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=182 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=184 <- addr1=636
==> memory[637] -> memory[186+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 181

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=181 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=182 <- addr1=591
==> memory[592] -> memory[181+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[181+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=177 <- addr1=598
inp param 1 (rel) = 17179869184 <<-- addr2=179 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[181+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 17179869184 <<-- addr2=179 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=180 <- addr1=610
==> memory[611] -> memory[181+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 6 <<-- addr2=178 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=180 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[181+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[181+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 183
Input queue empty, returning ..
< 213> Painted (x: 23, y: -4) black, turned to  down, and then moved to (x: 23, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=182 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[183+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 181

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=181 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=179 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[181+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=177 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=179 <- addr1=636
==> memory[637] -> memory[181+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 176

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=176 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=177 <- addr1=591
==> memory[592] -> memory[176+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[176+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=172 <- addr1=598
inp param 1 (rel) = 8589934592 <<-- addr2=174 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[176+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8589934592 <<-- addr2=174 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=175 <- addr1=610
==> memory[611] -> memory[176+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 7 <<-- addr2=173 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=175 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[176+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[176+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 178
Input queue empty, returning ..
< 214> Painted (x: 23, y: -5) black, turned to right, and then moved to (x: 24, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=177 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[178+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 176

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=176 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=174 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[176+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=172 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=174 <- addr1=636
==> memory[637] -> memory[176+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 171

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=171 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=172 <- addr1=591
==> memory[592] -> memory[171+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[171+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=167 <- addr1=598
inp param 1 (rel) = 4294967296 <<-- addr2=169 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[171+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4294967296 <<-- addr2=169 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=170 <- addr1=610
==> memory[611] -> memory[171+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 8 <<-- addr2=168 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=170 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[171+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[171+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 173
Input queue empty, returning ..
< 215> Painted (x: 24, y: -5) black, turned to    up, and then moved to (x: 24, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=172 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[173+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 171

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=171 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=169 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[171+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=167 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=169 <- addr1=636
==> memory[637] -> memory[171+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 166

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=166 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=167 <- addr1=591
==> memory[592] -> memory[166+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[166+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=162 <- addr1=598
inp param 1 (rel) = 2147483648 <<-- addr2=164 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[166+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2147483648 <<-- addr2=164 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=165 <- addr1=610
==> memory[611] -> memory[166+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 9 <<-- addr2=163 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=165 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[166+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[166+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 168
Input queue empty, returning ..
< 216> Painted (x: 24, y: -4) black, turned to right, and then moved to (x: 25, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=167 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[168+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 166

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=166 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=164 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[166+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=162 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=164 <- addr1=636
==> memory[637] -> memory[166+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 161

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=161 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=162 <- addr1=591
==> memory[592] -> memory[161+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[161+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=157 <- addr1=598
inp param 1 (rel) = 1073741824 <<-- addr2=159 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[161+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1073741824 <<-- addr2=159 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=160 <- addr1=610
==> memory[611] -> memory[161+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 10 <<-- addr2=158 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=160 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[161+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[161+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 163
Input queue empty, returning ..
< 217> Painted (x: 25, y: -4) black, turned to  down, and then moved to (x: 25, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=162 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[163+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 161

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=161 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=159 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[161+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=157 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=159 <- addr1=636
==> memory[637] -> memory[161+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 156

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=156 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=157 <- addr1=591
==> memory[592] -> memory[156+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[156+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=152 <- addr1=598
inp param 1 (rel) = 536870912 <<-- addr2=154 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[156+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 536870912 <<-- addr2=154 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=155 <- addr1=610
==> memory[611] -> memory[156+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 11 <<-- addr2=153 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=155 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[156+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[156+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 158
Input queue empty, returning ..
< 218> Painted (x: 25, y: -5) black, turned to right, and then moved to (x: 26, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=157 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[158+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 156

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=156 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=154 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[156+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=152 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=154 <- addr1=636
==> memory[637] -> memory[156+-4] = 378430208

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 151

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=151 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 378430208 <<-- addr2=152 <- addr1=591
==> memory[592] -> memory[151+-4] = 378430208

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[151+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 378430208 <<-- addr2=147 <- addr1=598
inp param 1 (rel) = 268435456 <<-- addr2=149 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=150 <- addr1=610
==> memory[611] -> memory[151+-2] = 268435456

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 12 <<-- addr2=148 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=150 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[151+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[151+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 153
Input queue empty, returning ..
< 219> Painted (x: 26, y: -5) black, turned to    up, and then moved to (x: 26, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=152 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[153+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 151

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=151 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 268435456 <<-- addr2=149 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[151+-2] = -268435456

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 378430208 <<-- addr2=147 <- addr1=635
inp param 1 (rel) = -268435456 <<-- addr2=149 <- addr1=636
==> memory[637] -> memory[151+-4] = 109994752

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 146

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=146 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 109994752 <<-- addr2=147 <- addr1=591
==> memory[592] -> memory[146+-4] = 109994752

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[146+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 109994752 <<-- addr2=142 <- addr1=598
inp param 1 (rel) = 134217728 <<-- addr2=144 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[146+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 134217728 <<-- addr2=144 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=145 <- addr1=610
==> memory[611] -> memory[146+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 13 <<-- addr2=143 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=145 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[146+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[146+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 148
Input queue empty, returning ..
< 220> Painted (x: 26, y: -4) white, turned to right, and then moved to (x: 27, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=147 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[148+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 146

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=146 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=144 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[146+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 109994752 <<-- addr2=142 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=144 <- addr1=636
==> memory[637] -> memory[146+-4] = 109994752

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 141

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=141 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 109994752 <<-- addr2=142 <- addr1=591
==> memory[592] -> memory[141+-4] = 109994752

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[141+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 109994752 <<-- addr2=137 <- addr1=598
inp param 1 (rel) = 67108864 <<-- addr2=139 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=140 <- addr1=610
==> memory[611] -> memory[141+-2] = 67108864

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 14 <<-- addr2=138 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=140 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[141+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[141+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 143
Input queue empty, returning ..
< 221> Painted (x: 27, y: -4) black, turned to  down, and then moved to (x: 27, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=142 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[143+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 141

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=141 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 67108864 <<-- addr2=139 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[141+-2] = -67108864

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 109994752 <<-- addr2=137 <- addr1=635
inp param 1 (rel) = -67108864 <<-- addr2=139 <- addr1=636
==> memory[637] -> memory[141+-4] = 42885888

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 136

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=136 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 42885888 <<-- addr2=137 <- addr1=591
==> memory[592] -> memory[136+-4] = 42885888

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[136+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 42885888 <<-- addr2=132 <- addr1=598
inp param 1 (rel) = 33554432 <<-- addr2=134 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=135 <- addr1=610
==> memory[611] -> memory[136+-2] = 33554432

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 15 <<-- addr2=133 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=135 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[136+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[136+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 138
Input queue empty, returning ..
< 222> Painted (x: 27, y: -5) white, turned to right, and then moved to (x: 28, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=137 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[138+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 136

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=136 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 33554432 <<-- addr2=134 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[136+-2] = -33554432

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 42885888 <<-- addr2=132 <- addr1=635
inp param 1 (rel) = -33554432 <<-- addr2=134 <- addr1=636
==> memory[637] -> memory[136+-4] = 9331456

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 131

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=131 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9331456 <<-- addr2=132 <- addr1=591
==> memory[592] -> memory[131+-4] = 9331456

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[131+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9331456 <<-- addr2=127 <- addr1=598
inp param 1 (rel) = 16777216 <<-- addr2=129 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[131+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16777216 <<-- addr2=129 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=130 <- addr1=610
==> memory[611] -> memory[131+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 16 <<-- addr2=128 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=130 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[131+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[131+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 133
Input queue empty, returning ..
< 223> Painted (x: 28, y: -5) white, turned to    up, and then moved to (x: 28, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=132 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[133+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 131

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=131 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=129 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[131+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9331456 <<-- addr2=127 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=129 <- addr1=636
==> memory[637] -> memory[131+-4] = 9331456

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 126

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=126 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 9331456 <<-- addr2=127 <- addr1=591
==> memory[592] -> memory[126+-4] = 9331456

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[126+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 9331456 <<-- addr2=122 <- addr1=598
inp param 1 (rel) = 8388608 <<-- addr2=124 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=125 <- addr1=610
==> memory[611] -> memory[126+-2] = 8388608

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 17 <<-- addr2=123 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=125 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[126+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[126+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 128
Input queue empty, returning ..
< 224> Painted (x: 28, y: -4) black, turned to right, and then moved to (x: 29, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=127 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[128+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 126

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=126 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8388608 <<-- addr2=124 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[126+-2] = -8388608

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 9331456 <<-- addr2=122 <- addr1=635
inp param 1 (rel) = -8388608 <<-- addr2=124 <- addr1=636
==> memory[637] -> memory[126+-4] = 942848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 121

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=121 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 942848 <<-- addr2=122 <- addr1=591
==> memory[592] -> memory[121+-4] = 942848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[121+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 942848 <<-- addr2=117 <- addr1=598
inp param 1 (rel) = 4194304 <<-- addr2=119 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[121+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4194304 <<-- addr2=119 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=120 <- addr1=610
==> memory[611] -> memory[121+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 18 <<-- addr2=118 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=120 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[121+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[121+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 123
Input queue empty, returning ..
< 225> Painted (x: 29, y: -4) white, turned to  down, and then moved to (x: 29, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=122 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[123+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 121

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=121 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=119 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[121+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 942848 <<-- addr2=117 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=119 <- addr1=636
==> memory[637] -> memory[121+-4] = 942848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 116

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=116 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 942848 <<-- addr2=117 <- addr1=591
==> memory[592] -> memory[116+-4] = 942848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[116+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 942848 <<-- addr2=112 <- addr1=598
inp param 1 (rel) = 2097152 <<-- addr2=114 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[116+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2097152 <<-- addr2=114 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=115 <- addr1=610
==> memory[611] -> memory[116+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 19 <<-- addr2=113 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=115 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[116+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[116+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 118
Input queue empty, returning ..
< 226> Painted (x: 29, y: -5) black, turned to right, and then moved to (x: 30, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=117 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[118+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 116

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=116 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=114 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[116+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 942848 <<-- addr2=112 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=114 <- addr1=636
==> memory[637] -> memory[116+-4] = 942848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 111

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=111 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 942848 <<-- addr2=112 <- addr1=591
==> memory[592] -> memory[111+-4] = 942848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[111+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 942848 <<-- addr2=107 <- addr1=598
inp param 1 (rel) = 1048576 <<-- addr2=109 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[111+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1048576 <<-- addr2=109 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=110 <- addr1=610
==> memory[611] -> memory[111+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 20 <<-- addr2=108 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=110 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[111+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[111+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 113
Input queue empty, returning ..
< 227> Painted (x: 30, y: -5) black, turned to    up, and then moved to (x: 30, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=112 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[113+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 111

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=111 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=109 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[111+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 942848 <<-- addr2=107 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=109 <- addr1=636
==> memory[637] -> memory[111+-4] = 942848

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 106

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=106 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 942848 <<-- addr2=107 <- addr1=591
==> memory[592] -> memory[106+-4] = 942848

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[106+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 942848 <<-- addr2=102 <- addr1=598
inp param 1 (rel) = 524288 <<-- addr2=104 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=105 <- addr1=610
==> memory[611] -> memory[106+-2] = 524288

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 21 <<-- addr2=103 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=105 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[106+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[106+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 108
Input queue empty, returning ..
< 228> Painted (x: 30, y: -4) black, turned to right, and then moved to (x: 31, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=107 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[108+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 106

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=106 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 524288 <<-- addr2=104 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[106+-2] = -524288

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 942848 <<-- addr2=102 <- addr1=635
inp param 1 (rel) = -524288 <<-- addr2=104 <- addr1=636
==> memory[637] -> memory[106+-4] = 418560

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 101

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=101 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 418560 <<-- addr2=102 <- addr1=591
==> memory[592] -> memory[101+-4] = 418560

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[101+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 418560 <<-- addr2=97 <- addr1=598
inp param 1 (rel) = 262144 <<-- addr2=99 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=100 <- addr1=610
==> memory[611] -> memory[101+-2] = 262144

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 22 <<-- addr2=98 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=100 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[101+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[101+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 103
Input queue empty, returning ..
< 229> Painted (x: 31, y: -4) white, turned to  down, and then moved to (x: 31, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=102 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[103+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 101

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=101 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 262144 <<-- addr2=99 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[101+-2] = -262144

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 418560 <<-- addr2=97 <- addr1=635
inp param 1 (rel) = -262144 <<-- addr2=99 <- addr1=636
==> memory[637] -> memory[101+-4] = 156416

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 96

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=96 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 156416 <<-- addr2=97 <- addr1=591
==> memory[592] -> memory[96+-4] = 156416

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[96+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 156416 <<-- addr2=92 <- addr1=598
inp param 1 (rel) = 131072 <<-- addr2=94 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=95 <- addr1=610
==> memory[611] -> memory[96+-2] = 131072

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 23 <<-- addr2=93 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=95 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[96+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[96+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 98
Input queue empty, returning ..
< 230> Painted (x: 31, y: -5) white, turned to right, and then moved to (x: 32, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=97 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[98+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 96

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=96 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 131072 <<-- addr2=94 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[96+-2] = -131072

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 156416 <<-- addr2=92 <- addr1=635
inp param 1 (rel) = -131072 <<-- addr2=94 <- addr1=636
==> memory[637] -> memory[96+-4] = 25344

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 91

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=91 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 25344 <<-- addr2=92 <- addr1=591
==> memory[592] -> memory[91+-4] = 25344

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[91+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 25344 <<-- addr2=87 <- addr1=598
inp param 1 (rel) = 65536 <<-- addr2=89 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[91+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 65536 <<-- addr2=89 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=90 <- addr1=610
==> memory[611] -> memory[91+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 24 <<-- addr2=88 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=90 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[91+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[91+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 93
Input queue empty, returning ..
< 231> Painted (x: 32, y: -5) white, turned to    up, and then moved to (x: 32, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=92 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[93+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 91

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=91 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=89 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[91+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 25344 <<-- addr2=87 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=89 <- addr1=636
==> memory[637] -> memory[91+-4] = 25344

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 86

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=86 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 25344 <<-- addr2=87 <- addr1=591
==> memory[592] -> memory[86+-4] = 25344

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[86+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 25344 <<-- addr2=82 <- addr1=598
inp param 1 (rel) = 32768 <<-- addr2=84 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[86+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32768 <<-- addr2=84 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=85 <- addr1=610
==> memory[611] -> memory[86+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 25 <<-- addr2=83 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=85 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[86+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[86+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 88
Input queue empty, returning ..
< 232> Painted (x: 32, y: -4) black, turned to right, and then moved to (x: 33, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=87 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[88+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 86

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=86 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=84 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[86+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 25344 <<-- addr2=82 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=84 <- addr1=636
==> memory[637] -> memory[86+-4] = 25344

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 81

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=81 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 25344 <<-- addr2=82 <- addr1=591
==> memory[592] -> memory[81+-4] = 25344

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[81+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 25344 <<-- addr2=77 <- addr1=598
inp param 1 (rel) = 16384 <<-- addr2=79 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=80 <- addr1=610
==> memory[611] -> memory[81+-2] = 16384

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 26 <<-- addr2=78 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=80 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[81+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[81+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 83
Input queue empty, returning ..
< 233> Painted (x: 33, y: -4) black, turned to  down, and then moved to (x: 33, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=82 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[83+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 81

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=81 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 16384 <<-- addr2=79 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[81+-2] = -16384

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 25344 <<-- addr2=77 <- addr1=635
inp param 1 (rel) = -16384 <<-- addr2=79 <- addr1=636
==> memory[637] -> memory[81+-4] = 8960

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 76

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=76 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 8960 <<-- addr2=77 <- addr1=591
==> memory[592] -> memory[76+-4] = 8960

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[76+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 8960 <<-- addr2=72 <- addr1=598
inp param 1 (rel) = 8192 <<-- addr2=74 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=75 <- addr1=610
==> memory[611] -> memory[76+-2] = 8192

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 27 <<-- addr2=73 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=75 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[76+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[76+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 78
Input queue empty, returning ..
< 234> Painted (x: 33, y: -5) white, turned to right, and then moved to (x: 34, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=77 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[78+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 76

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=76 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 8192 <<-- addr2=74 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[76+-2] = -8192

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 8960 <<-- addr2=72 <- addr1=635
inp param 1 (rel) = -8192 <<-- addr2=74 <- addr1=636
==> memory[637] -> memory[76+-4] = 768

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 71

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=71 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 768 <<-- addr2=72 <- addr1=591
==> memory[592] -> memory[71+-4] = 768

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[71+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 768 <<-- addr2=67 <- addr1=598
inp param 1 (rel) = 4096 <<-- addr2=69 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[71+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4096 <<-- addr2=69 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=70 <- addr1=610
==> memory[611] -> memory[71+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 28 <<-- addr2=68 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=70 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[71+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[71+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 73
Input queue empty, returning ..
< 235> Painted (x: 34, y: -5) white, turned to    up, and then moved to (x: 34, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=72 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[73+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 71

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=71 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=69 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[71+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 768 <<-- addr2=67 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=69 <- addr1=636
==> memory[637] -> memory[71+-4] = 768

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 66

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=66 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 768 <<-- addr2=67 <- addr1=591
==> memory[592] -> memory[66+-4] = 768

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[66+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 768 <<-- addr2=62 <- addr1=598
inp param 1 (rel) = 2048 <<-- addr2=64 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[66+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2048 <<-- addr2=64 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=65 <- addr1=610
==> memory[611] -> memory[66+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 29 <<-- addr2=63 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=65 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[66+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[66+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 68
Input queue empty, returning ..
< 236> Painted (x: 34, y: -4) black, turned to right, and then moved to (x: 35, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=67 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[68+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 66

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=66 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=64 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[66+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 768 <<-- addr2=62 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=64 <- addr1=636
==> memory[637] -> memory[66+-4] = 768

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 61

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=61 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 768 <<-- addr2=62 <- addr1=591
==> memory[592] -> memory[61+-4] = 768

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[61+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 768 <<-- addr2=57 <- addr1=598
inp param 1 (rel) = 1024 <<-- addr2=59 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[61+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1024 <<-- addr2=59 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=60 <- addr1=610
==> memory[611] -> memory[61+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 30 <<-- addr2=58 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=60 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[61+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[61+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 63
Input queue empty, returning ..
< 237> Painted (x: 35, y: -4) black, turned to  down, and then moved to (x: 35, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=62 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[63+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 61

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=61 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=59 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[61+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 768 <<-- addr2=57 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=59 <- addr1=636
==> memory[637] -> memory[61+-4] = 768

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 56

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=56 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 768 <<-- addr2=57 <- addr1=591
==> memory[592] -> memory[56+-4] = 768

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[56+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 768 <<-- addr2=52 <- addr1=598
inp param 1 (rel) = 512 <<-- addr2=54 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=55 <- addr1=610
==> memory[611] -> memory[56+-2] = 512

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 31 <<-- addr2=53 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=55 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[56+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[56+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 58
Input queue empty, returning ..
< 238> Painted (x: 35, y: -5) black, turned to right, and then moved to (x: 36, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=57 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[58+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 56

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=56 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 512 <<-- addr2=54 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[56+-2] = -512

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 768 <<-- addr2=52 <- addr1=635
inp param 1 (rel) = -512 <<-- addr2=54 <- addr1=636
==> memory[637] -> memory[56+-4] = 256

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 51

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=51 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 256 <<-- addr2=52 <- addr1=591
==> memory[592] -> memory[51+-4] = 256

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[51+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 256 <<-- addr2=47 <- addr1=598
inp param 1 (rel) = 256 <<-- addr2=49 <- addr1=599
==> memory[600] -> memory[10] = 0

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=609
inp param 1 (rel) = 1 <<-- addr2=50 <- addr1=610
==> memory[611] -> memory[51+-2] = 256

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 32 <<-- addr2=48 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=50 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[51+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[51+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 53
Input queue empty, returning ..
< 239> Painted (x: 36, y: -5) white, turned to    up, and then moved to (x: 36, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=52 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[53+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 51

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=51 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 256 <<-- addr2=49 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[51+-2] = -256

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 256 <<-- addr2=47 <- addr1=635
inp param 1 (rel) = -256 <<-- addr2=49 <- addr1=636
==> memory[637] -> memory[51+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 46

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=46 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=47 <- addr1=591
==> memory[592] -> memory[46+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[46+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=42 <- addr1=598
inp param 1 (rel) = 128 <<-- addr2=44 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[46+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 128 <<-- addr2=44 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=45 <- addr1=610
==> memory[611] -> memory[46+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 33 <<-- addr2=43 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=45 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[46+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[46+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 48
Input queue empty, returning ..
< 240> Painted (x: 36, y: -4) white, turned to right, and then moved to (x: 37, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=47 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[48+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 46

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=46 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=44 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[46+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=42 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=44 <- addr1=636
==> memory[637] -> memory[46+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 41

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=41 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=42 <- addr1=591
==> memory[592] -> memory[41+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[41+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=37 <- addr1=598
inp param 1 (rel) = 64 <<-- addr2=39 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[41+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 64 <<-- addr2=39 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=40 <- addr1=610
==> memory[611] -> memory[41+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 34 <<-- addr2=38 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=40 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[41+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[41+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 43
Input queue empty, returning ..
< 241> Painted (x: 37, y: -4) black, turned to  down, and then moved to (x: 37, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=42 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[43+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 41

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=41 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=39 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[41+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=37 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=39 <- addr1=636
==> memory[637] -> memory[41+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 36

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=36 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=37 <- addr1=591
==> memory[592] -> memory[36+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[36+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=32 <- addr1=598
inp param 1 (rel) = 32 <<-- addr2=34 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[36+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 32 <<-- addr2=34 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=35 <- addr1=610
==> memory[611] -> memory[36+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 35 <<-- addr2=33 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=35 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[36+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[36+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 38
Input queue empty, returning ..
< 242> Painted (x: 37, y: -5) black, turned to right, and then moved to (x: 38, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=37 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[38+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 36

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=36 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=34 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[36+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=32 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=34 <- addr1=636
==> memory[637] -> memory[36+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 31

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=31 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=32 <- addr1=591
==> memory[592] -> memory[31+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[31+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=27 <- addr1=598
inp param 1 (rel) = 16 <<-- addr2=29 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[31+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 16 <<-- addr2=29 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=30 <- addr1=610
==> memory[611] -> memory[31+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 36 <<-- addr2=28 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=30 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[31+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[31+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 33
Input queue empty, returning ..
< 243> Painted (x: 38, y: -5) black, turned to    up, and then moved to (x: 38, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=32 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[33+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 31

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=31 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=29 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[31+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=27 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=29 <- addr1=636
==> memory[637] -> memory[31+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 26

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=26 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=27 <- addr1=591
==> memory[592] -> memory[26+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[26+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=22 <- addr1=598
inp param 1 (rel) = 8 <<-- addr2=24 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[26+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 8 <<-- addr2=24 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=25 <- addr1=610
==> memory[611] -> memory[26+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 37 <<-- addr2=23 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=25 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[26+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[26+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 28
Input queue empty, returning ..
< 244> Painted (x: 38, y: -4) black, turned to right, and then moved to (x: 39, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=27 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[28+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 469

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=469 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[469] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 0 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 1

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 1 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 26

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=26 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=24 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[26+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=22 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=24 <- addr1=636
==> memory[637] -> memory[26+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 21

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=21 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=22 <- addr1=591
==> memory[592] -> memory[21+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[21+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=17 <- addr1=598
inp param 1 (rel) = 4 <<-- addr2=19 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[21+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 4 <<-- addr2=19 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=20 <- addr1=610
==> memory[611] -> memory[21+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 38 <<-- addr2=18 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=20 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[21+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[21+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 23
Input queue empty, returning ..
< 245> Painted (x: 39, y: -4) black, turned to  down, and then moved to (x: 39, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=22 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[23+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 470

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=470 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[470] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 1 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 2

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 2 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 21

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=21 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=19 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[21+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=17 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=19 <- addr1=636
==> memory[637] -> memory[21+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 16

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=16 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=17 <- addr1=591
==> memory[592] -> memory[16+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[16+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=12 <- addr1=598
inp param 1 (rel) = 2 <<-- addr2=14 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[16+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 2 <<-- addr2=14 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=15 <- addr1=610
==> memory[611] -> memory[16+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 39 <<-- addr2=13 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=15 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[16+1] = 0

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[16+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 18
Input queue empty, returning ..
< 246> Painted (x: 39, y: -5) black, turned to right, and then moved to (x: 40, y: -5)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 0 <<-- addr2=17 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[18+-1] => 0

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 471

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 0 <<-- addr2=471 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[471] => 0

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 2 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 3

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 3 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 0

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 0 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 16

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=16 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=14 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[16+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=12 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=14 <- addr1=636
==> memory[637] -> memory[16+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 11

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 589 <<-- addr2=11 <- addr1=642

[589] 22102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=590
inp param 1 (rel) = 0 <<-- addr2=12 <- addr1=591
==> memory[592] -> memory[11+-4] = 0

[593] 21101 => Instruction ADD (1)
inp param 0 (imm) = 1 <<-- addr1=594
inp param 1 (imm) = 0 <<-- addr1=595
==> memory[596] -> memory[11+-1] = 1

[597] 2207 => Instruction LT (7)
inp param 0 (rel) = 0 <<-- addr2=7 <- addr1=598
inp param 1 (rel) = 1 <<-- addr2=9 <- addr1=599
==> memory[600] -> memory[10] = 1

[601] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=602
inp param 1 (imm) = 608 <<-- addr1=603

[604] 21102 => Instruction MUL (2)
inp param 0 (imm) = 0 <<-- addr1=605
inp param 1 (imm) = 1 <<-- addr1=606
==> memory[607] -> memory[11+-1] = 0

[608] 22202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=9 <- addr1=609
inp param 1 (rel) = 0 <<-- addr2=10 <- addr1=610
==> memory[611] -> memory[11+-2] = 0

[612] 2107 => Instruction LT (7)
inp param 0 (imm) = 0 <<-- addr1=613
inp param 1 (rel) = 40 <<-- addr2=8 <- addr1=614
==> memory[615] -> memory[10] = 1

[616] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=617
inp param 1 (imm) = 630 <<-- addr1=618

[619] 21202 => Instruction MUL (2)
inp param 0 (rel) = 1 <<-- addr2=10 <- addr1=620
inp param 1 (imm) = 1 <<-- addr1=621
==> memory[622] -> memory[11+1] = 1

[623] 21102 => Instruction MUL (2)
inp param 0 (imm) = 630 <<-- addr1=624
inp param 1 (imm) = 1 <<-- addr1=625
==> memory[626] -> memory[11+0] = 630

[627] 105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=628
inp param 1 (pos) = 473 <<-- addr2=505 <- addr1=629

[473] 109 => Instruction URB (9)
inp param 0 (imm) = 2 <<-- addr1=474
  new relative base = 13
Input queue empty, returning ..
< 247> Painted (x: 40, y: -5) black, turned to    up, and then moved to (x: 40, y: -4)

[475] 3 => Instruction INP (3)
-> 0
==> memory[476] -> memory[10] = 0

[477] 204 => Instruction OUT (4)
inp param 0 (rel) = 1 <<-- addr2=12 <- addr1=478
  OUTPUT[0] .. memory[478] -> memory[13+-1] => 1

[479] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=480
inp param 1 (imm) = 469 <<-- addr1=481
==> memory[482] -> memory[484] = 472

[483] 4 => Instruction OUT (4)
inp param 0 (pos) = 1 <<-- addr2=472 <- addr1=484
  OUTPUT[1] .. memory[484] -> memory[472] => 1

[485] 1001 => Instruction ADD (1)
inp param 0 (pos) = 3 <<-- addr2=468 <- addr1=486
inp param 1 (imm) = 1 <<-- addr1=487
==> memory[488] -> memory[468] = 4

[489] 108 => Instruction EQ (8)
inp param 0 (imm) = 4 <<-- addr1=490
inp param 1 (pos) = 4 <<-- addr2=468 <- addr1=491
==> memory[492] -> memory[10] = 1

[493] 1006 => Instruction JZ (6)
inp param 0 (pos) = 1 <<-- addr2=10 <- addr1=494
inp param 1 (imm) = 500 <<-- addr1=495

[496] 1102 => Instruction MUL (2)
inp param 0 (imm) = 1 <<-- addr1=497
inp param 1 (imm) = 0 <<-- addr1=498
==> memory[499] -> memory[468] = 0

[500] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=501
  new relative base = 11

[502] 2105 => Instruction JNZ (5)
inp param 0 (imm) = 1 <<-- addr1=503
inp param 1 (rel) = 630 <<-- addr2=11 <- addr1=504

[630] 21202 => Instruction MUL (2)
inp param 0 (rel) = 0 <<-- addr2=9 <- addr1=631
inp param 1 (imm) = -1 <<-- addr1=632
==> memory[633] -> memory[11+-2] = 0

[634] 22201 => Instruction ADD (1)
inp param 0 (rel) = 0 <<-- addr2=7 <- addr1=635
inp param 1 (rel) = 0 <<-- addr2=9 <- addr1=636
==> memory[637] -> memory[11+-4] = 0

[638] 109 => Instruction URB (9)
inp param 0 (imm) = -5 <<-- addr1=639
  new relative base = 6

[640] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=641
inp param 1 (rel) = 542 <<-- addr2=6 <- addr1=642

[542] 109 => Instruction URB (9)
inp param 0 (imm) = -4 <<-- addr1=543
  new relative base = 2

[544] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=545
inp param 1 (rel) = 463 <<-- addr2=2 <- addr1=546

[463] 109 => Instruction URB (9)
inp param 0 (imm) = -2 <<-- addr1=464
  new relative base = 0

[465] 2106 => Instruction JZ (6)
inp param 0 (imm) = 0 <<-- addr1=466
inp param 1 (rel) = 441 <<-- addr2=0 <- addr1=467

[441] 99 => Instruction HLT (99)
[441] Quitting ..
    ████    ██        ██████    ████████  ██████        ████  ████████  ██████
  ██    ██  ██        ██    ██  ██        ██    ██        ██        ██  ██    ██
  ██        ██        ██████    ██████    ██    ██        ██      ██    ██    ██
  ██  ████  ██        ██    ██  ██        ██████          ██    ██      ██████
  ██    ██  ██        ██    ██  ██      ████        ██    ██  ██        ██
    ██████  ████████  ██████    ████████  ██          ████    ████████  ██
  [OK] check
